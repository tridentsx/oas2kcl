{
  "$schema": "http://json-schema.org/draft-07/schema",
  "properties": {
    "affinity": {
      "properties": {
        "nodeAffinity": {
          "default": "{}",
          "description": "nodeAffinity rules",
          "type": "object"
        },
        "podAntiAffinity": {
          "default": "soft",
          "description": "podAntiAffinity with two possible values: soft and hard",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "topologyKey": {
          "default": "kubernetes.io/hostname",
          "description": "topologyKey to use",
          "type": [
            "string",
            "integer",
            "number"
          ]
        }
      },
      "type": "object"
    },
    "annotations": {
      "default": "{}",
      "description": "The key-prefix is optional and cannot exceed 253 characters with following character set: [a-z0-9A-Z\\.]\nThe key cannot exceed 63 characters with following character set: [a-z0-9A-Z\\_\\.\\-]",
      "type": "object"
    },
    "appArmorProfile": {
      "properties": {
        "proxy": {
          "properties": {
            "localhostProfile": {
              "default": "\"\"",
              "description": "Localhost path to the AppArmor profile for the proxy container. Should only be set if appArmorProfile.proxy.type is set to localhost.",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "type": {
              "default": "\"\"",
              "description": "The AppArmor type for the proxy container. Available options are \"unconfined\", \"runtime/default\", \"localhost\" , \"\" [default=\"\"]",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "autoScaling": {
      "properties": {
        "proxy": {
          "properties": {
            "averageUtilization": {
              "properties": {
                "cpu": {
                  "default": "160",
                  "description": "The average percentage of requested CPU utilization used by the Horizontal Pod Autoscaler (HPA) for scaling decisions. Default is 80% of proxy container's default CPU limit, but in case the container's CPU request or limit is changed this value must also be changed accordingly.",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "memory": {
                  "default": "160",
                  "description": "The average percentage of requested memory utilization used by the Horizontal Pod Autoscaler (HPA) for scaling decisions. Default is 80% of proxy container's default memory limit, but in case the container's memory request or limit is changed this value must also be changed accordingly.",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                }
              },
              "type": "object"
            },
            "enabled": {
              "default": "true",
              "description": "Enable/disable auto-scaling for proxy workload. Note! Enabling auto-scaling in existing deployments which currently has a statically configured replica count will lead to Kubernetes first scaling down the replica count to 1 before the Horizontal Pod Autoscaler (HPA) adjusts the count using its defined replicas and scaling decisions.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            },
            "maxReplicas": {
              "default": "5",
              "description": "The maxiumum proxy replicas the Horizontal Pod Autoscaler (HPA) may scale up to.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "pattern": "^-?\\d+$",
                  "type": "string"
                }
              ]
            },
            "minReplicas": {
              "default": "2",
              "description": "The minimum proxy replicas the Horizontal Pod Autoscaler (HPA) may scale down to.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "pattern": "^-?\\d+$",
                  "type": "string"
                }
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "config": {
      "properties": {
        "audit": {
          "properties": {
            "disableCertAuthAudit": {
              "default": "false",
              "description": "Disable auditing of requests where successful certificate authorization has been used",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          "type": "object"
        },
        "basicAuth": {
          "properties": {
            "enabled": {
              "default": "false",
              "description": "",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            },
            "userList": {
              "default": "",
              "description": "",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "userSecretFileName": {
              "default": "",
              "description": "",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "userSecretName": {
              "default": "",
              "description": "",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        },
        "certAuth": {
          "properties": {
            "clientCaSecret": {
              "default": "\u003cempty\u003e",
              "description": "Secret name containing CA to validate incoming client certificates. Mandatory if config.certAuth.enabled=true",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "clientCaSecretKey": {
              "default": "ca.crt",
              "description": "Secret key inside the \"config.certAuth.clientCaSecret\" which contains the CA in PEM format. Mandatory if config.certAuth.enabled=true",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "enabled": {
              "default": "false",
              "description": "Enables certificate authentication",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          "type": "object"
        },
        "dataCollection": {
          "properties": {
            "enabled": {
              "default": "false",
              "description": "If set to true the proxy is an eligible target for extended data collection",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            },
            "path": {
              "default": "/_data-collection",
              "description": "The REST URI exposed by the application for extended data collection",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        },
        "faultIndications": {
          "properties": {
            "enabled": {
              "default": "false",
              "description": "This allows the service to send Fault Indications",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            },
            "host": {
              "default": "eric-bss-bam-ah-proxy:5000",
              "description": "The destination host when sending Fault Indications, no protocol but including port",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        },
        "hmacAuth": {
          "properties": {
            "enabled": {
              "default": "false",
              "description": "Enable Hash-based Message Authentication Code (HMAC)",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            },
            "sharedSecretField": {
              "default": "hmac-shared-secret",
              "description": "The data field key in the Kubernetes secret, which value is the HMAC authentication shared secret",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "sharedSecretName": {
              "default": "\u003cempty\u003e",
              "description": "The Kubernetes secret used as the shared secret in the HMAC authentication",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "userGroupsConfigMapName": {
              "default": "\u003cempty\u003e",
              "description": "The Kubernetes ConfigMap used for providing the user and group(s) (as JSON list) that is authorized for HMAC",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        },
        "logConnectionTtlMinutes": {
          "default": "120",
          "description": "Log connection TTL (minutes) towards log transformer service. Connection will reset after configured number of minutes",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "^-?\\d+$",
              "type": "string"
            }
          ]
        },
        "logLevel": {
          "default": "info",
          "description": "Set the logging level",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "log": {
          "properties": {
            "streamingMethod": {
              "default": "indirect",
              "description": "The local parameter for specifying the streaming method of service logs. It can be 'indirect', 'direct', 'dual', or null. If set to null, global.log.streamingMethod will be used to determine the streaming method",
              "type": "string",
              "enum": [ "indirect", "direct", "dual", "" ]
            }
          }
        },
        "logQueueSize": {
          "default": "1000",
          "description": "Size of the log queue for streaming",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "^-?\\d+$",
              "type": "string"
            }
          ]
        },
        "logTimeoutSeconds": {
          "default": "5",
          "description": "Timeout waiting for logs to be streamed (in seconds) before terminating",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "^-?\\d+$",
              "type": "string"
            }
          ]
        },
        "logTransformerHost": {
          "default": "eric-log-transformer:5024",
          "description": "FQDN including port number of the log transformer service, don't include protocol.",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "logTransformerNoTlsHost": {
          "default": "eric-log-transformer:5025",
          "description": "FQDN including port number of the log transformer non tls service, don't include protocol. Required when streamingMethod is set to direct or dual",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "metrics": {
          "properties": {
            "enabled": {
              "default": "false",
              "description": "This allows the service to increment counters",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            },
            "host": {
              "default": "eric-pm-server",
              "description": "Host name of the pm server. this is used for pm metrics access if network policies are in use",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "path": {
              "default": "/_metrics",
              "description": "The REST URI exposed by the application for metrics",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "serviceName": {
              "default": "\u003cempty\u003e",
              "description": "The subsystem name for all the metrics generated by the service to be prefixed",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            }
          },
          "type": "object"
        },
        "oidcAuth": {
          "properties": {
            "authnProxyLoginURL": {
              "default": "\u003cempty\u003e",
              "description": "Full login url of the authentication proxy service to perform authorization code grant flow to fetch the tokens from IAM. Mandatory if upstream service requires access from the GUI. Example of authnProxyLoginURL value is https://eric-bss-sec-authn-proxy.ericsson.se/sec/authn/v1/login?origin=",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "caKey": {
              "default": "cacertbundle.pem",
              "description": "Secret key in config.oidcAuth.caSecret pointing to the CA in PEM format",
              "type": "string"
            },
            "caSecret": {
              "default": "eric-sec-sip-tls-trusted-root-cert",
              "description": "Secret name containing a CA for the oidc connection. Mandatory if config.oidcAuth.enabled=true",
              "type": "string"
            },
            "clientId": {
              "default": "AuthorizationClient",
              "description": "ClientId to validate in case of id_tokens, if access tokens will be used then this should be the audience. Mandatory if config.oidcAuth.enabled=true",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "enabled": {
              "default": "eric-sec-sip-tls-trusted-root-cert",
              "description": "Enables oidc authentication. Mandatory if config.oidcAuth.enabled=true",
              "type": [
                "boolean"
              ]
            },
            "groupsClaim": {
              "default": "groups",
              "description": "Claim used to extract group memberships from JWT.",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "issuerUrl": {
              "default": "\u003cempty\u003e",
              "description": "Full url to the oidc, only https is accepted. It supports multiple issuerUrl with comma separator. Mandatory if config.oidcAuth.enabled=true",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "removeAuthenticatedToken": {
              "default": "true",
              "description": "Remove Authorization header when token Authentication succeeded. If set to false Authorization header will be propagated to upstream service.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            },
            "usernameClaim": {
              "default": "email",
              "description": "Claim used to extract user from JWT",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        },
        "rbac": {
          "properties": {
            "globalRolePolicyCmLabel": {
              "default": "oam-rbac",
              "description": "",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "globalRolePolicyFileName": {
              "default": "\"\"",
              "description": "File containing global rbac policy roles",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "localRolePolicyFileName": {
              "default": "\"\"",
              "description": "File containing local service rbac policy roles",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "serviceRolePolicyCmLabel": {
              "default": "oam-rbac",
              "description": "Label value of config maps containing global rbac policy roles. Example:",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "modelType": {
              "default": 0,
              "description": "Type of module used for permission evaluation.  &lt;br&gt; 0 - classic k8s rbac model, only one wildcard in end of pattern, &lt;br&gt; 1 - reserved (do not use), &lt;br&gt; 2 - wildcard allowed model , wildcard and param id allowed in pattern &lt;br&gt; Example: 0",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "tls": {
          "properties": {
            "caKey": {
              "default": "\u003cempty\u003e",
              "description": "Secret key in config.tls.existingSecret pointing to the CA in PEM format",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "certKey": {
              "default": "\u003cempty\u003e",
              "description": "Secret key in config.tls.existingSecret pointing to the certificate in PEM format",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "existingSecret": {
              "default": "\u003cempty\u003e",
              "description": "Secret name containing certificate, ca and private key for the proxy. If this is not specified then SIP-TLS will be used to create certificates for the proxy.",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "privateKey": {
              "default": "\u003cempty\u003e",
              "description": "Secret key in config.tls.existingSecret pointing to the private key in PEM format",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            }
          },
          "type": "object"
        },
        "upstream": {
          "properties": {
            "caKey": {
              "default": "cacertbundle.pem",
              "description": "Secret key in config.upstream.caSecret pointing to the CA in PEM format",
              "type": "string"
            },
            "caSecret": {
              "default": "eric-sec-sip-tls-trusted-root-cert",
              "description": "Secret name containing CA for the upstream connection",
              "type": [
                "string",
                "null"
              ]
            },
            "certKey": {
              "default": "tls.crt",
              "description": "Secret key in config.upstream.existingSecret pointing to the certificate in PEM format",
              "type": "string"
            },
            "existingSecret": {
              "default": "\u003cempty\u003e",
              "description": "Secret name containing client certificate key pair for the upstream service. Mutually exclusive to config.upstream.issuerRef.",
              "type": [
                "string",
                "null"
              ]
            },
            "includeAuthHeaders": {
              "default": "true",
              "description": "",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            },
            "issuerRef": {
              "default": "\u003cempty\u003e",
              "description": "SIPTLS CA name which is used for creation of client certificate to connect to upstream service. Mutually exclusive to config.upstream.existingSecret.",
              "type": [
                "string",
                "null"
              ]
            },
            "noTlsUrl": {
              "default": "\u003cnil\u003e",
              "description": "",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "privateKey": {
              "default": "tls.key",
              "description": "Secret key in config.upstream.existingSecret pointing to the private key in PEM format",
              "type": "string"
            },
            "serverName": {
              "default": "\u003cempty\u003e",
              "description": " The value used to specify the hostname that the client expects the upstream server to present a certificate for. If not set it defaults to the hostname part of the upstream URL.",
              "type": [
                "string",
                "null"
              ]
            },
            "url": {
              "default": "\u003cempty\u003e",
              "description": "Full url including protocol to the upstream service",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            }
          },
          "required": [
            "url"
          ],
          "type": "object"
        },
        "verbose": {
          "default": "false",
          "description": "Enable verbose logging",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          ]
        }
      },
      "type": "object"
    },
    "fullnameOverride": {
      "default": "",
      "description": "",
      "type": [
        "string",
        "integer",
        "number"
      ]
    },
    "global": {
      "properties": {
        "annotations": {
          "default": "nil",
          "description": "Global annotations. Global, service level, and resource-specific annotations are merged, no conflicts are allowed.",
          "type": "object"
        },
        "fsGroup": {
          "properties": {
            "manual": {
              "default": "\u003cempty\u003e",
              "description": "Sets a fsGroup ID for all services. If manual set to empty namespace default configuration is used.",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "namespace": {
              "default": "\u003cempty\u003e",
              "description": "Sets a fsGroup to use namespace default. The following values are possible: true, false and \"\". If global.fsGroup.namespace set to \"\" or false, namespace default configuration is used.",
              "type": [
                "boolean",
                "null"
              ]
            }
          },
          "type": "object"
        },
        "internalIPFamily": {
          "default": "\u003cempty\u003e",
          "description": "InternalIPFamily configures the IP address family used for cluster-internal IP address. Available values are: IPv4, IPv6, and empty.",
          "enum": [
            "IPv6",
            "IPv4",
            ""
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "labels": {
          "default": "nil",
          "description": "Global labels. Global, service level, and resource-specific labels are merged, no conflicts are allowed.",
          "type": "object"
        },
        "log": {
          "properties": {
            "streamingMethod": {
              "default": "indirect",
              "description": "The global parameter for specifying the streaming method of service logs. It can be 'indirect', 'direct', 'dual', or null. If both global.log.streamingMethod and log.streamingMethod are set to null, it will choose 'indirect' by default",
              "type": "string",
              "enum": ["indirect", "direct", "dual", ""]
            }
          }
        },
        "networkPolicy": {
          "properties": {
            "enabled": {
              "default": "false",
              "description": "Network policy",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          "type": "object"
        },
        "nodeSelector": {
          "default": "{}",
          "description": "Global node selectors",
          "type": "object"
        },
        "podSecurityContext": {
          "properties": {
            "supplementalGroups": {
              "default": "\u003cempty\u003e",
              "description": "SupplementalGroups is used for setting the GID value(s) for volume data that is used by the services. The value will be merged if both global and local value are set. supplementalGroup will not be set in helmchart if both global and local value are not set.",
              "type": [
                "array",
                "null"
              ]
            }
          },
          "type": "object"
        },
        "pullSecret": {
          "default": "\u003cempty\u003e",
          "description": "PullSecret used when fetching the image",
          "type": [
            "string",
            "integer",
            "number",
            "null"
          ]
        },
        "registry": {
          "properties": {
            "imagePullPolicy": {
              "default": "\u003cempty\u003e",
              "description": "Pull policy for the image",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "repoPath": {
              "default": "\u003cempty\u003e",
              "description": "Repo where the image is located",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "url": {
              "default": "armdocker.rnd.ericsson.se",
              "description": "Registry url to fetch image from",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        },
        "securityPolicy": {
          "properties": {
            "rolekind": {
              "default": "\"\"",
              "description": "Configuration of the security policy role kind. The following values are possible: ClusterRole, Role and \"\". Rolebinding will not be created with value \"\".",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        },
        "timezone": {
          "default": "UTC",
          "description": "Timezone",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "tolerations": {
          "default": "[]",
          "description": "Tolerations for pod assignment, this supports the fullAPI",
          "type": "array"
        }
      },
      "type": "object"
    },
    "imageCredentials": {
      "properties": {
        "registry": {
          "properties": {
            "imagePullPolicy": {
              "default": "\u003cempty\u003e",
              "description": "Pull policy for the image",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "url": {
              "default": "\u003cnil\u003e",
              "description": "",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            }
          },
          "type": "object"
        },
        "repoPath": {
          "default": "proj-bam-drop/3pp/brancz",
          "description": "Repo where the image is located",
          "type": [
            "string",
            "integer",
            "number",
            "null"
          ]
        }
      },
      "type": "object"
    },
    "images": {
      "properties": {
        "proxy": {
          "properties": {
            "name": {
              "default": "kube-rbac-proxy",
              "description": "Proxy image name",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "tag": {
              "default": "0.5.0-E021",
              "description": "Proxy image tag",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ingress": {
      "properties": {
        "circuitBreaker": {
          "properties": {
            "maxConnections": {
              "default": "1024",
              "description": "The maxiumum number of connections from ICCR to the service. See Projectcontour annotations",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "pattern": "^-?\\d+$",
                  "type": "string"
                }
              ]
            },
            "maxPendingRequests": {
              "default": "1024",
              "description": "The maxiumum number of pending requests from ICCR to the service. See Projectcontour annotations",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "pattern": "^-?\\d+$",
                  "type": "string"
                }
              ]
            },
            "maxRequests": {
              "default": "1024",
              "description": "The maxiumum number of requests from ICCR to the service. See Projectcontour annotations",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "pattern": "^-?\\d+$",
                  "type": "string"
                }
              ]
            },
            "maxRetries": {
              "default": "1024",
              "description": "The maxiumum number of parallel retries from ICCR to the service. See Projectcontour annotations",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "pattern": "^-?\\d+$",
                  "type": "string"
                }
              ]
            }
          },
          "type": "object"
        },
        "enabled": {
          "default": "true",
          "description": "Whether ingress should be enabled for the proxy. Ingress uses TLS passthrough.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          ]
        },
        "fqdn": {
          "default": "Template name",
          "description": "FQDN that the proxy should be accessed from outside.",
          "type": [
            "string",
            "integer",
            "number",
            "null"
          ]
        },
        "ingressClass": {
          "default": "\u003cnil\u003e",
          "description": "",
          "type": [
            "string",
            "integer",
            "number",
            "null"
          ]
        },
        "specification": {
          "default": "\u003cempty\u003e",
          "description": "Defines the complete specification of the ingress including routing rules, upstream services to proxy to, and TLS configuration.",
          "type": [
            "object",
            "null"
          ]
        },
        "type": {
          "default": "contour",
          "description": "",
          "type": [
            "string",
            "integer",
            "number"
          ]
        }
      },
      "type": "object"
    },
    "labels": {
      "default": "{}",
      "description": "",
      "type": "object"
    },
    "licenseControl": {
      "properties": {
        "functionControlHost": {
          "default": "eric-bss-bam-function-controller-evaluation-service:8443",
          "description": "Function control evaluation host, no protocol, including port",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "functionControlNoTlsHost": {
          "default": "eric-bss-bam-function-controller-evaluation-service:8080",
          "description": "Function control evaluation non TLS host, no protocol, including port",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "interval": {
          "default": "600",
          "description": "The interval to check status of featureflag and raise/clear alarms. The maximum allowed value is 600",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "^-?\\d+$",
              "type": "string"
            }
          ]
        },
        "kafkaProxyHost": {
          "default": "eric-bss-kafka-proxy-http:80",
          "description": "Kafka proxy host, no protocol, including port",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "secondsPerSeverity": {
          "default": "43200",
          "description": "Seconds for each alarm severity to exist before increasing severity. The maximum allowed value is 43200",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "^-?\\d+$",
              "type": "string"
            }
          ]
        }
      },
      "type": "object"
    },
    "nameOverride": {
      "default": "\u003cempty\u003e",
      "description": "Name override of the chart",
      "type": [
        "string",
        "integer",
        "number",
        "null"
      ]
    },
    "networkPolicy": {
      "properties": {
        "egress": {
          "properties": {
            "accessLabels": {
              "properties": {
                "rbacProxy": {
                  "default": "{}",
                  "description": "This parameter is a placeholder for adding a list of egress traffic network policy labels. If this service wants to send traffic then it should add all its outgoing traffic network policy access labels using this parameter.",
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "enabled": {
          "default": "true",
          "description": "Network policy. The network policy will be enabled if both \"networkPolicy.enabled\" and \"global.networkPolicy.enabled\" are set to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          ]
        }
      },
      "type": "object"
    },
    "nodeSelector": {
      "default": "{}",
      "description": "Node selectors",
      "type": "object"
    },
    "podDisruptionBudget": {
      "properties": {
        "maxUnavailable": {
          "default": "\u003cempty\u003e",
          "description": "The maximum allowed number of unavailable pods during a planned disruption. This paramater is mutually exclusive with podDisruptionBudget.minAvailable.",
          "type": [
            "string",
            "integer",
            "number",
            "null"
          ]
        },
        "minAvailable": {
          "default": "1",
          "description": "Minimum number of pods that must remain available during a planned disruption. This paramater is mutually exclusive with podDisruptionBudget.maxUnavailable.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "^-?\\d+$",
              "type": "string"
            }
          ]
        }
      },
      "type": "object"
    },
    "podPriority": {
      "properties": {
        "eric-bss-kube-rbac-proxy": {
          "properties": {
            "priorityClassName": {
              "default": "",
              "description": "The pod priority for the service",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "podSecurityContext": {
      "properties": {
        "supplementalGroups": {
          "default": "\u003cempty\u003e",
          "description": "SupplementalGroups is used for setting the GID value(s) for volume data that is used by the services. The value will be merged if both global and local value are set. supplementalGroup will not be set in helmchart if both global and local value are not set.",
          "type": [
            "array",
            "null"
          ]
        }
      },
      "type": "object"
    },
    "probes": {
      "properties": {
        "proxy": {
          "properties": {
            "livenessProbe": {
              "properties": {
                "failureThreshold": {
                  "default": "3",
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "initialDelaySeconds": {
                  "default": "1",
                  "description": "Number of seconds after the container has started before probe is initiated",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "periodSeconds": {
                  "default": "10",
                  "description": "How often (in seconds) to perform the probe",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "timeoutSeconds": {
                  "default": "2",
                  "description": "Number of seconds after which the probe times out",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                }
              },
              "type": "object"
            },
            "startupProbe": {
              "properties": {
                "failureThreshold": {
                  "default": "60",
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "initialDelaySeconds": {
                  "default": "5",
                  "description": "Number of seconds after the container has started before probe is initiated",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "periodSeconds": {
                  "default": "5",
                  "description": "How often (in seconds) to perform the probe",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "successThreshold": {
                  "default": "1",
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "timeoutSeconds": {
                  "default": "2",
                  "description": "Number of seconds after which the probe times out",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "replicaCount": {
      "default": "2",
      "description": "number of replicas",
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "pattern": "^-?\\d+$",
          "type": "string"
        }
      ]
    },
    "resources": {
      "properties": {
        "rbacProxy": {
          "properties": {
            "limits": {
              "properties": {
                "cpu": {
                  "default": "100m",
                  "description": "Limits cpu",
                  "type": [
                    "string",
                    "integer",
                    "number"
                  ]
                },
                "memory": {
                  "default": "64Mi",
                  "description": "Limits memory",
                  "type": [
                    "string",
                    "integer",
                    "number"
                  ]
                }
              },
              "type": "object"
            },
            "requests": {
              "properties": {
                "cpu": {
                  "default": "50m",
                  "description": "Request cpu",
                  "type": [
                    "string",
                    "integer",
                    "number"
                  ]
                },
                "memory": {
                  "default": "32Mi",
                  "description": "Request memory",
                  "type": [
                    "string",
                    "integer",
                    "number"
                  ]
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "seccompProfile": {
      "properties": {
        "proxy": {
          "properties": {
            "localhostProfile": {
              "default": "\"\"",
              "description": "Localhost path to the seccomp profile for the proxy container. Should only be set if seccompProfile.proxy.type is set to Localhost.",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "type": {
              "default": "\"\"",
              "description": "Feature of the Linux kernel for secure computing mode for proxy container. Available options are `Unconfined`, `RuntimeDefault`, `Localhost` and \"\" [default=\"\"]",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "securityPolicy": {
      "properties": {
        "rolename": {
          "default": "eric-bss-kube-rbac-proxy",
          "description": "Rolename sets the name of the security policy role that is bound to the service account.",
          "type": [
            "string",
            "integer",
            "number"
          ]
        }
      },
      "type": "object"
    },
    "service": {
      "properties": {
        "port": {
          "default": "9443",
          "description": "Service port",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "^-?\\d+$",
              "type": "string"
            }
          ]
        },
        "type": {
          "default": "ClusterIP",
          "description": "Service type",
          "type": [
            "string",
            "integer",
            "number"
          ]
        }
      },
      "type": "object"
    },
    "serviceAccount": {
      "properties": {
        "create": {
          "default": "true",
          "description": "",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          ]
        },
        "name": {
          "default": "Template name",
          "description": "Name of the serviceaccount to be used",
          "type": [
            "string",
            "integer",
            "number",
            "null"
          ]
        }
      },
      "type": "object"
    },
    "terminationGracePeriodSeconds": {
      "default": "30",
      "description": "Number of seconds after SIGTERM caught before shutting down",
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "pattern": "^-?\\d+$",
          "type": "string"
        }
      ]
    },
    "tolerations": {
      "default": "[]",
      "description": "Toleration rules",
      "type": "array"
    },
    "topologySpreadConstraints": {
      "default": "[]",
      "description": "Topology spread constraint rules",
      "type": "array"
    },
    "updateStrategy": {
      "properties": {
        "proxy": {
          "properties": {
            "rollingUpdate": {
              "properties": {
                "maxSurge": {
                  "default": "50%",
                  "description": "Update strategy max surge",
                  "type": [
                    "string",
                    "integer",
                    "number"
                  ]
                },
                "maxUnavailable": {
                  "default": "50%",
                  "description": "Update strategy max unavailable",
                  "type": [
                    "string",
                    "integer",
                    "number"
                  ]
                }
              },
              "type": "object"
            },
            "type": {
              "default": "RollingUpdate",
              "description": "Update strategy",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}