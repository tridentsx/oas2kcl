# global:
#  labels: {}
#  annotations: {}
#  timezone: UTC
#  pullSecret:
#  nodeSelector: {}
#  tolerations: []
#  security:
#    tls:
#      enabled: true
#  registry:
#    url: armdocker.rnd.ericsson.se
#    imagePullPolicy: IfNotPresent
#    repoPath:
#  networkPolicy:
#    enabled: false
#  securityPolicy:
#    rolekind: ""
#  podSecurityContext:
#    supplementalGroups:
#  fsGroup:
#    manual:
#    namespace:
#  internalIPFamily:
#  log:
#    streamingMethod: "indirect"

replicaCount: 2

imageCredentials:
  authnproxy:
    repoPath:
    registry:
      url:
      imagePullPolicy:
  pullSecret:

images:
  authnproxy:
    name:
    tag:

nameOverride: ""

fullnameOverride: ""

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 50%
    maxSurge: 50%

serviceAccount:
  create: true
  name:

service:
  app:
    labelName: bss-oam-gui
  #HTTP Unsecured port
  port: 8080
  tls:
    #HTTPS Secured port
    port: 8443

annotations: {}

labels: {}

resources:
  authnproxy:
    requests:
      memory: 64Mi
      cpu: 25m
    limits:
      memory: 128Mi
      cpu: 100m

nodeSelector: {}

tolerations: []

topologySpreadConstraints: []

affinity:
  podAntiAffinity: "soft"
  nodeAffinity: {}
  # topologyKey value to use when setting podAntiAffinity
  # Default: "kubernetes.io/hostname"
  # Example: "kubernetes.io/zone" - specify kubernetes.io/zone as antiAffinity key
  topologyKey: "kubernetes.io/hostname"

podPriority:
  eric-bss-bam-authn-proxy:
    priorityClassName:

podDisruptionBudget:
  minAvailable: 1
  maxUnavailable:

networkPolicy:
  enabled: true
  egress:
    accessLabels:
      authnProxy: {}

seccompProfile:
  authnproxy:
    type: ""
    localhostProfile: ""

appArmorProfile:
  authnproxy:
    type: ""
    localhostProfile: ""

securityPolicy:
  rolename: ""

podSecurityContext:
  supplementalGroups:

config:
  faultIndications:
    enabled: true
    host: eric-bss-bam-ah-proxy:5000
  metrics:
    enabled: true
    host: eric-pm-server
    serviceName: authn_proxy
  log:
    level: info
    streamingMethod: ""
    host: "eric-log-transformer:5024"
    hostNoTls: "eric-log-transformer:5025"
    timeoutSeconds: 5
    queueSize: 1000
    connectionTtlMinutes: 120

# IAM Ingress Host and Port
iam:
  realmName: "master"
  ingress:
    fqdn: "eric-bam-access-mgmt"
    port: 443
  caSecret: eric-sec-sip-tls-trusted-root-cert
  caKey: cacertbundle.pem

#Authentication Proxy Secret, Ingress Host and Port
authnProxy:
  #Secret which stores the Authentication Proxy Client Credential from IAM
  clientCredentialSecret: "eric-bss-bam-authn-proxy-client-secret"
  #Domain name used to store the cookies
  cookieDomain: ""
  #Idle session timeout in minutes
  idleSessionTimeout: 10

ingress:
  enabled: true #Authentication won't work for GUI applications if ingress is disabled
  ## DNS name of the service towards which the request is sent. Ingress host FQDN.
  # The value for "hostname" must be appropriate for the ingress controller to work.
  # For example, the hostname could be based on the cluster in which the service is deployed.
  # Example value : "authnproxy.todd009.rnd.gic.ericsson.se"
  fqdn: "eric-bss-bam-authn-proxy"
  port: 443
  ## The path to match from the external request
  path: /sec/authn/
  # Ingress class name indicating which ingress controller instance is
  # consuming the ingress resource
  ingressClass:
  tls:
    caCertSecret : "eric-tm-ingress-controller-cr-client-ca"

probes:
  authnproxy:
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 1
      periodSeconds: 10
      timeoutSeconds: 2
    startupProbe:
      failureThreshold: 120
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 2

terminationGracePeriodSeconds: 30
