{
  "$schema": "http://json-schema.org/draft-07/schema",
  "properties": {
    "affinity": {
      "properties": {
        "nodeAffinity": {
          "default": "{}",
          "description": "nodeAffinity rules",
          "type": "object"
        },
        "podAntiAffinity": {
          "default": "soft",
          "description": "Pod Anti-affinity configuration for High Availability. Set to either \"hard\" or \"soft\".",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "topologyKey": {
          "default": "kubernetes.io/hostname",
          "description": "topology Key Affinity",
          "type": [
            "string",
            "integer",
            "number"
          ]
        }
      },
      "type": "object"
    },
    "annotations": {
      "default": "{}",
      "description": "The key-prefix is optional and cannot exceed 253 characters with following character set: [a-z0-9A-Z\\.]\nThe key cannot exceed 63 characters with following character set: [a-z0-9A-Z\\_\\.\\-]",
      "type": "object"
    },
    "appArmorProfile": {
      "properties": {
        "authnproxy": {
          "properties": {
            "localhostProfile": {
              "default": "\"\"",
              "description": "Localhost path to the AppArmor profile for the authnproxy container. Should only be set if appArmorProfile.authnproxy.type is set to localhost.",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "type": {
              "default": "\"\"",
              "description": "The AppArmor type for the authnproxy container. Available options are \"unconfined\", \"runtime/default\", \"localhost\" and \"\" [default=\"\"].",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "authnProxy": {
      "properties": {
        "clientCredentialSecret": {
          "default": "eric-bss-bam-authn-proxy-client-secret",
          "description": "Secret which stores the Authentication Proxy Client Credential from IAM",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "cookieDomain": {
          "default": "\u003cempty\u003e",
          "description": "Domain name used to store the cookies",
          "type": [
            "string",
            "integer",
            "number",
            "null"
          ]
        },
        "idleSessionTimeout": {
          "default": "10",
          "description": "Idle session timeout in minutes",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "^-?\\d+$",
              "type": "string"
            }
          ]
        }
      },
      "required": [
        "cookieDomain"
      ],
      "type": "object"
    },
    "config": {
      "properties": {
        "faultIndications": {
          "properties": {
            "enabled": {
              "default": "true",
              "description": "This allows the service to send Fault Indications",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            },
            "host": {
              "default": "eric-bss-bam-ah-proxy:5000",
              "description": "Host name of the fault indication server",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        },
        "log": {
          "properties": {
            "connectionTtlMinutes": {
              "default": "120",
              "description": "Log connection TTL (minutes) towards log transformer service. Connection will reset after configured number of minutes. Required when streamingMethod is set to direct or dual",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "pattern": "^-?\\d+$",
                  "type": "string"
                }
              ]
            },
            "host": {
              "default": "eric-log-transformer:5024",
              "description": "FQDN including port number of the log transformer service, don't include protocol. Required when streamingMethod is set to direct or dual",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "hostNoTls": {
              "default": "eric-log-transformer:5025",
              "description": "FQDN including port number of the log transformer non tls service, don't include protocol. Required when streamingMethod is set to direct or dual",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "level": {
              "default": "info",
              "description": "Set the logging level",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "streamingMethod": {
              "default": "indirect",
              "description": "The local parameter for specifying the streaming method of service logs. It can be 'indirect', 'direct', 'dual', or null. If set to null, global.log.streamingMethod will be used to determine the streaming method",
              "type": "string",
              "enum": [ "indirect", "direct", "dual", "" ]
            },
            "queueSize": {
              "default": "1000",
              "description": "Size of the log queue for streaming. Required when streamingMethod is set to direct or dual",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "pattern": "^-?\\d+$",
                  "type": "string"
                }
              ]
            },
            "timeoutSeconds": {
              "default": "5",
              "description": "Timeout waiting for logs to be streamed (in seconds) before terminating. Required when streamingMethod is set to direct or dual",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "pattern": "^-?\\d+$",
                  "type": "string"
                }
              ]
            }
          },
          "type": "object"
        },
        "metrics": {
          "properties": {
            "enabled": {
              "default": "true",
              "description": "This allows the service to increment counters.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            },
            "host": {
              "default": "eric-pm-server",
              "description": "Host name of the pm server. this is used for pm metrics access if network policies are in use",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "serviceName": {
              "default": "authn_proxy",
              "description": "The subsystem name for all the metrics generated by the service to be prefixed",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "fullnameOverride": {
      "default": "\"\"",
      "description": "Fullname override of the chart",
      "type": [
        "string",
        "integer",
        "number"
      ]
    },
    "global": {
      "properties": {
        "annotations": {
          "default": "nil",
          "description": "Global annotations. Global, service level, and resource-specific annotations are merged, no conflicts are allowed.",
          "type": [
            "object"
          ]
        },
        "fsGroup": {
          "properties": {
            "manual": {
              "default": "\u003cempty\u003e",
              "description": "Sets a fsGroup ID for all services. If manual set to empty namespace default configuration is used.",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "namespace": {
              "default": "\u003cempty\u003e",
              "description": "Sets a fsGroup to use namespace default. The following values are possible: true, false and \"\". If global.fsGroup.namespace set to \"\" or false, namespace default configuration is used.",
              "type": [
                "boolean",
                "null"
              ]
            }
          },
          "type": "object"
        },
        "internalIPFamily": {
          "default": "\u003cempty\u003e",
          "description": "InternalIPFamily configures the IP address family used for cluster-internal IP address. Available values are: IPv4, IPv6, and empty.",
          "enum": [
            "IPv6",
            "IPv4",
            ""
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "labels": {
          "default": "nil",
          "description": "Global labels. Global, service level, and resource-specific labels are merged, no conflicts are allowed.",
          "type": [
            "object"
          ]
        },
        "log": {
          "properties": {
            "streamingMethod": {
              "default": "indirect",
              "description": "The global parameter for specifying the streaming method of service logs. It can be 'indirect', 'direct', 'dual', or null. If both global.log.streamingMethod and log.streamingMethod are set to null, it will choose 'indirect' by default",
              "type": "string",
              "enum": [ "indirect", "direct", "dual", "" ]
            }
          }
        },
        "networkPolicy": {
          "properties": {
            "enabled": {
              "default": "false",
              "description": "Global network policy parameter",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          "type": "object"
        },
        "nodeSelector": {
          "default": "{}",
          "description": "Global node selectors",
          "type": "object"
        },
        "podSecurityContext": {
          "properties": {
            "supplementalGroups": {
              "default": "\u003cempty\u003e",
              "description": "SupplementalGroups is used for setting the GID value(s) for volume data that is used by the services. The value will be merged if both global and local value are set. supplementalGroup will not be set in helmchart if both global and local value are not set.",
              "type": [
                "array",
                "null"
              ]
            }
          },
          "type": "object"
        },
        "pullSecret": {
          "default": "\u003cempty\u003e",
          "description": "PullSecret used when fetching the image",
          "type": [
            "string",
            "integer",
            "number",
            "null"
          ]
        },
        "registry": {
          "properties": {
            "imagePullPolicy": {
              "default": "IfNotPresent",
              "description": "Pull policy for the image",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "repoPath": {
              "default": "\u003cempty\u003e",
              "description": "Repo where the image is located",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "url": {
              "default": "armdocker.rnd.ericsson.se",
              "description": "Registry url to fetch image from",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        },
        "securityPolicy": {
          "properties": {
            "rolekind": {
              "default": "\"\"",
              "description": "Configuration of the security policy role kind. The following values are possible: ClusterRole, Role and \"\". Rolebinding will not be created with value \"\".",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        },
        "timezone": {
          "default": "UTC",
          "description": "Timezone",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "tolerations": {
          "default": "[]",
          "description": "Tolerations for pod assignment, this supports the fullAPI",
          "type": "array"
        }
      },
      "type": "object"
    },
    "iam": {
      "properties": {
        "ingress": {
          "properties": {
            "fqdn": {
              "default": "eric-bam-access-mgmt",
              "description": "Ingress FQDN of Sec Access Management - IAM",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "port": {
              "default": "443",
              "description": "Ingress Controller Https Port",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "pattern": "^-?\\d+$",
                  "type": "string"
                }
              ]
            }
          },
          "type": "object"
        },
        "realmName": {
          "default": "master",
          "description": "Enable external connection TLS for Authentication Proxy via Ingress",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "caSecret": {
          "default": "eric-sec-sip-tls-trusted-root-cert",
          "description": "Secret name containing a CA for the IAM connection",
          "type": [
            "string"
          ]
        },
        "caKey": {
          "default": "cacertbundle.pem",
          "description": "Secret key in iam.caSecret pointing to the CA in PEM format",
          "type": [
            "string"
          ]
        }
      },
      "type": "object"
    },
    "imageCredentials": {
      "properties": {
        "authnproxy": {
          "properties": {
            "registry": {
              "properties": {
                "imagePullPolicy": {
                  "default": "IfNotPresent",
                  "description": "Pull policy for the image",
                  "type": [
                    "string",
                    "integer",
                    "number",
                    "null"
                  ]
                },
                "url": {
                  "default": "\u003cnil\u003e",
                  "description": "",
                  "type": [
                    "string",
                    "integer",
                    "number",
                    "null"
                  ]
                }
              },
              "type": "object"
            },
            "repoPath": {
              "default": "\u003cempty\u003e",
              "description": "Repo where the image is located",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            }
          },
          "type": "object"
        },
        "pullSecret": {
          "default": "\u003cempty\u003e",
          "description": "PullSecret used when fetching the image",
          "type": [
            "string",
            "integer",
            "number",
            "null"
          ]
        }
      },
      "type": "object"
    },
    "images": {
      "properties": {
        "authnproxy": {
          "properties": {
            "name": {
              "default": "\u003cnil\u003e",
              "description": "Docker image name for BAM AuthN Proxy",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            },
            "tag": {
              "default": "\u003cnil\u003e",
              "description": "Docker image tag for BAM AuthN Proxy",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ingress": {
      "properties": {
        "enabled": {
          "default": "true",
          "description": "Enable ingress which creates child httpproxy for Topology Manager Rbac proxy.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          ]
        },
        "fqdn": {
          "default": "eric-bss-bam-authn-proxy",
          "description": "Value of Hostname of Ingress controller",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "ingressClass": {
          "default": "\u003cempty\u003e",
          "description": "Ingress class name",
          "type": [
            "string",
            "integer",
            "number",
            "null"
          ]
        },
        "path": {
          "default": "/sec/authn/",
          "description": "Ingress path",
          "type": [
            "string",
            "integer",
            "number"
          ]
        },
        "port": {
          "default": "443",
          "description": "proxy sevice port",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "^-?\\d+$",
              "type": "string"
            }
          ]
        },
        "tls": {
          "properties": {
            "caCertSecret": {
              "default": "eric-tm-ingress-controller-cr-client-ca",
              "description": "Ingress Client CA Secret",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        }
      },
      "required": [
        "fqdn"
      ],
      "type": "object"
    },
    "labels": {
      "default": "{}",
      "description": "labels.service level, and resource-specific labels are merged, no conflicts are allowed.",
      "type": "object"
    },
    "nameOverride": {
      "default": "\"\"",
      "description": "Name override of the chart",
      "type": [
        "string",
        "integer",
        "number"
      ]
    },
    "networkPolicy": {
      "properties": {
        "egress": {
          "properties": {
            "accessLabels": {
              "properties": {
                "authnProxy": {
                  "default": "{}",
                  "description": "This parameter is a placeholder for adding a list of egress traffic network policy labels of BAM AuthN Proxy Service. If this service wants to send traffic then it should add all its outgoing traffic network policy access labels using this parameter.",
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "enabled": {
          "default": "true",
          "description": "Network policy. The network policy will be enabled if both networkPolicy.enabled and global.networkPolicy.enabled are set to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          ]
        }
      },
      "type": "object"
    },
    "nodeSelector": {
      "default": "{}",
      "description": "Node selectors",
      "type": "object"
    },
    "podDisruptionBudget": {
      "properties": {
        "maxUnavailable": {
          "default": "\u003cempty\u003e",
          "description": "The number of pods that must still be available after the voluntary eviction",
          "type": [
            "string",
            "integer",
            "number",
            "null"
          ]
        },
        "minAvailable": {
          "default": "1",
          "description": "The number of pods that must still be available after the voluntary eviction (e.g. drain node). minAvailable can be either an absolute number or a percentage. PodDisruptionBudget will be created but will not apply if replicaCount is 1",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "^-?\\d+$",
              "type": "string"
            }
          ]
        }
      },
      "type": "object"
    },
    "podPriority": {
      "properties": {
        "eric-bss-bam-authn-proxy": {
          "properties": {
            "priorityClassName": {
              "default": "\u003cempty\u003e",
              "description": "The pod priority for the service",
              "type": [
                "string",
                "integer",
                "number",
                "null"
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "podSecurityContext": {
      "properties": {
        "supplementalGroups": {
          "default": "\u003cempty\u003e",
          "description": "SupplementalGroups is used for setting the GID value(s) for volume data that is used by the services. The value will be merged if both global and local value are set. supplementalGroup will not be set in helmchart if both global and local value are not set.",
          "type": [
            "array",
            "null"
          ]
        }
      },
      "type": "object"
    },
    "probes": {
      "properties": {
        "authnproxy": {
          "properties": {
            "livenessProbe": {
              "properties": {
                "failureThreshold": {
                  "default": "3",
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "initialDelaySeconds": {
                  "default": "1",
                  "description": "Number of seconds after the container has started before probe is initiated",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "periodSeconds": {
                  "default": "10",
                  "description": "How often (in seconds) to perform the probe",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "timeoutSeconds": {
                  "default": "2",
                  "description": "Number of seconds after which the probe times out",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                }
              },
              "type": "object"
            },
            "startupProbe": {
              "properties": {
                "failureThreshold": {
                  "default": "120",
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "initialDelaySeconds": {
                  "default": "5",
                  "description": "Number of seconds after the container has started before probe is initiated",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "periodSeconds": {
                  "default": "5",
                  "description": "How often (in seconds) to perform the probe",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "successThreshold": {
                  "default": "1",
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                },
                "timeoutSeconds": {
                  "default": "2",
                  "description": "Number of seconds after which the probe times out",
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "pattern": "^-?\\d+$",
                      "type": "string"
                    }
                  ]
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "replicaCount": {
      "default": "2",
      "description": "Number of replicas",
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "pattern": "^-?\\d+$",
          "type": "string"
        }
      ]
    },
    "resources": {
      "properties": {
        "authnproxy": {
          "properties": {
            "limits": {
              "properties": {
                "cpu": {
                  "default": "100m",
                  "description": "Limits cpu",
                  "type": [
                    "string",
                    "integer",
                    "number"
                  ]
                },
                "memory": {
                  "default": "128Mi",
                  "description": "Limits memory",
                  "type": [
                    "string",
                    "integer",
                    "number"
                  ]
                }
              },
              "type": "object"
            },
            "requests": {
              "properties": {
                "cpu": {
                  "default": "25m",
                  "description": "Request cpu",
                  "type": [
                    "string",
                    "integer",
                    "number"
                  ]
                },
                "memory": {
                  "default": "64Mi",
                  "description": "Request memory",
                  "type": [
                    "string",
                    "integer",
                    "number"
                  ]
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "seccompProfile": {
      "properties": {
        "authnproxy": {
          "properties": {
            "localhostProfile": {
              "default": "\"\"",
              "description": "Localhost path to the seccomp profile for the authnproxy container. Should only be set if seccompProfile.authnproxy.type is set to Localhost",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "type": {
              "default": "\"\"",
              "description": "Feature of the Linux kernel for secure computing mode for authnproxy container. Available options are `Unconfined`, `RuntimeDefault`, `Localhost` and \"\" [default=\"\"]",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "securityPolicy": {
      "properties": {
        "rolename": {
          "default": "\"\"",
          "description": "Rolename sets the name of the security policy role that is bound to the service account.",
          "type": [
            "string",
            "integer",
            "number"
          ]
        }
      },
      "type": "object"
    },
    "service": {
      "properties": {
        "app": {
          "properties": {
            "labelName": {
              "default": "bss-oam-gui",
              "description": "UI micro front-end discovery",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        },
        "port": {
          "default": "8080",
          "description": "Service port",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "pattern": "^-?\\d+$",
              "type": "string"
            }
          ]
        },
        "tls": {
          "properties": {
            "port": {
              "default": "8443",
              "description": "Secured Port used by the service",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "pattern": "^-?\\d+$",
                  "type": "string"
                }
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "serviceAccount": {
      "properties": {
        "create": {
          "default": "true",
          "description": "",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          ]
        },
        "name": {
          "default": "",
          "description": "Name of the serviceaccount to be used",
          "type": [
            "string",
            "integer",
            "number",
            "null"
          ]
        }
      },
      "type": "object"
    },
    "terminationGracePeriodSeconds": {
      "default": "30",
      "description": "Number of seconds after SIGTERM caught before shutting down",
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "pattern": "^-?\\d+$",
          "type": "string"
        }
      ]
    },
    "tolerations": {
      "default": "[]",
      "description": "Toleration rules",
      "type": "array"
    },
    "topologySpreadConstraints": {
      "default": "[]",
      "description": "Allows a deployment engineer to influence scheduling decisions made by Kubernetes scheduler.",
      "type": "array"
    },
    "updateStrategy": {
      "properties": {
        "rollingUpdate": {
          "properties": {
            "maxSurge": {
              "default": "50%",
              "description": "Max surge pod during upgrade",
              "type": [
                "string",
                "integer",
                "number"
              ]
            },
            "maxUnavailable": {
              "default": "50%",
              "description": "Max unavailable pod during upgrade",
              "type": [
                "string",
                "integer",
                "number"
              ]
            }
          },
          "type": "object"
        },
        "type": {
          "default": "RollingUpdate",
          "description": "The type of strategy to apply when doing an update of BAM AuthN Proxy",
          "type": [
            "string",
            "integer",
            "number"
          ]
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}
