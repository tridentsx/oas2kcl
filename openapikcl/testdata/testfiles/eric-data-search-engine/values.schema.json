{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "urn:adp:helm:schemas:v1:service-name",
  "if": {"$ref": "urn:adp:helm:schemas:v1:helm-schema-validation-conditions:v1/helmSchemaValidation-true"},
  "then": {
    "allOf": [
      {"$ref": "urn:adp:helm:schemas:v1:service-name/service"},
      {"$ref": "urn:adp:helm:schemas:v1:service-name/common"},
      {
        "if": {"$ref": "urn:adp:helm:schemas:v1:helm-schema-validation-conditions:v1/helmSchemaStrictValidation-true"},
        "then": {"$ref": "urn:adp:helm:schemas:v1:service-name/strict"}
      }
    ]
  },
  "$defs": {
    "urn:adp:helm:schemas:v1:service-name/service": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:service-name/service",
      "type": "object",
      "properties": {
        "global": {
          "type": "object",
          "properties": {
            "logShipper": {
              "type": "object",
              "properties": {
                "deployment": {
                  "type": "object",
                  "properties": {
                    "model": {
                      "enum": ["static", ""],
                      "$comment": "Deployment model of logshipper sidecar"
                    }
                  },
                  "required": ["model"]
                }
              },
              "required": ["deployment"]
            }
          }
        },
        "acceptDataLossAtDowngrade": {
          "type": "boolean",
          "$comment": "Accept Data loss during OpenSearch Downgrade to reduce downgrade time"
        },
        "indicesToBackupAtDowngrade": {
          "type": "array",
          "$comment": "Array of indices to backup during OpenSearch Downgrade",
          "items": {"type": "string"}
        },
        "autoSetRequiredWorkerNodeSysctl": {
          "type": "boolean",
          "$comment": "Set sysctl kernel parameter 'vm.max_map_count' in worker nodes"
        },
        "unassignedNode_leftDelayed_timeout": {
          "type": "string",
          "$comment": "Set unassigned.node_left.delayed_timeout value in template setting for all indices",
          "pattern": "^(\\d+(nanos|micros|ms|s|m|h|d)|0)$",
          "examples": ["0", "3m", "4d"]
        },
        "service": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "$comment": "Internal name given to the service"
            },
            "network": {
              "type": "object",
              "properties": {
                "protocol": {
                  "type": "object",
                  "properties": {
                    "IPv6": {
                      "type": "boolean",
                      "$comment": "Modifies network configuration based on IP version (IPv4 or IPv6) of cluster"
                    }
                  },
                  "required": ["IPv6"]
                }
              },
              "required": ["protocol"]
            },
            "endpoints": {
              "type": "object",
              "properties": {
                "internode": {
                  "type": "object",
                  "properties": {
                    "tls": {
                      "type": "object",
                      "properties": {
                        "verifyClientHostname": {
                          "type": "boolean",
                          "$comment": "Validate the IP address and hostname of other cluster members before allowing connections"
                        }
                      },
                      "required": ["verifyClientHostname"]
                    }
                  },
                  "required": ["tls"]
                },
                "rest": {
                  "type": "object",
                  "properties": {
                    "tls": {
                      "type": "object",
                      "properties": {
                        "verifyClientHostname": {
                          "type": "boolean",
                          "$comment": "Validate the IP address and hostname of REST clients before allowing connections"
                        }
                      },
                      "required": ["verifyClientHostname"]
                    }
                  },
                  "required": ["tls"]
                }
              },
              "required": ["internode", "rest"]
            }
          },
          "required": ["name", "network", "endpoints"]
        },
        "securityPolicy": {
          "type": "object",
          "properties": {
            "searchengine": {
              "type": "object",
              "properties": {
                "rolename": {
                  "type": "string",
                  "$comment": "Name of the security policy role that is bound to the service account 'eric-data-search-engine-sa'"
                }
              },
              "required": ["rolename"]
            },
            "searchenginehelmtest": {
              "type": "object",
              "properties": {
                "rolename": {
                  "type": "string",
                  "$comment": "Name of the security policy role that is bound to the service account 'eric-data-search-engine-sa-helmtest'"
                }
              },
              "required": ["rolename"]
            },
            "hooklauncher": {
              "type": "object",
              "properties": {
                "rolename": {
                  "type": "string",
                  "$comment": "Name of the security policy role that is bound to the service account 'eric-data-search-engine-hkln'"
                }
              },
              "required": ["rolename"]
            },
            "downgrade": {
              "type": "object",
              "properties": {
                "rolename": {
                  "type": "string",
                  "$comment": "Name of the security policy role that is bound to the service account 'eric-data-search-engine-downgrade'"
                }
              },
              "required": ["rolename"]
            }
          },
          "required": [
            "searchengine",
            "searchenginehelmtest",
            "hooklauncher",
            "downgrade"
          ]
        },
        "securityEventLogs": {
          "type": "object",
          "properties": {
            "modificationAllowedIndices": {
              "type": "array",
              "$comment": "Modification(update/delete) will be allowed only if actual indices in search engine starts with configured index names.",
              "items": {"type": "string"}
            }
          },
          "required": ["modificationAllowedIndices"]
        },
        "accessMgmt": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "$comment": "Enable/Disable access management"
            },
            "anonymous_auth_enabled": {
              "type": "boolean",
              "$comment": "Enable/Disable Anonymous authentication"
            },
            "order_of_authentication": {
              "type": "array",
              "$comment": "Order of authentication in a list.",
              "items": {"type": "string"}
            },
            "authorizationRules_configMapName": {
              "type": "string",
              "$comment": "Name of the configmap containing roles ,rolesmapping and users to map with 'default' role."
            },
            "jwt_auth": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "$comment": "Enable/Disable JWT authentication"
                },
                "signingKey": {
                  "type": "string",
                  "$comment": "Public signing key of the Identity Provider who provides the token."
                },
                "header": {
                  "type": "string",
                  "$comment": "Header from incoming HTTP request that contains Bearer token."
                },
                "subjectKey": {
                  "type": "string",
                  "$comment": "Key from JSON payload that contains username."
                },
                "rolesKey": {
                  "type": "string",
                  "$comment": "Key from JSON payload that contains roles."
                }
              },
              "required": [
                "enabled",
                "signingKey",
                "header",
                "subjectKey",
                "rolesKey"
              ]
            },
            "openid_auth": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "$comment": "Enable/Disable OpenIDC Authentication."
                },
                "iam": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "$comment": "Hostname of the IAM service."
                    },
                    "port": {
                      "type": "integer",
                      "$comment": "Port number in which IAM service is running."
                    },
                    "realm": {
                      "type": "string",
                      "$comment": "IAM's Realm name where users and roles required by Search Engine is stored."
                    },
                    "tls": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "$comment": "Enable/Disable TLS in IAM"
                        },
                        "verify_hostnames": {
                          "type": "boolean",
                          "$comment": "Verify the hostnames of the ADP IAM's TLS certificate"
                        },
                        "sendClientCertificate": {
                          "type": "boolean",
                          "$comment": "Whether to use TLS client authentication for the ADP IAM service"
                        }
                      },
                      "required": [
                        "enabled",
                        "verify_hostnames",
                        "sendClientCertificate"
                      ]
                    }
                  },
                  "required": ["host", "port", "realm", "tls"]
                },
                "header": {
                  "type": "string",
                  "$comment": "Header from incoming HTTP request that contains Bearer token."
                },
                "subjectKey": {
                  "type": "string",
                  "$comment": "Key from JSON payload that contains username."
                },
                "rolesKey": {
                  "type": "string",
                  "$comment": "Key from JSON payload that contains roles."
                }
              },
              "required": [
                "enabled",
                "iam",
                "header",
                "subjectKey",
                "rolesKey"
              ]
            },
            "roles": {
              "type": ["array", "null"],
              "$comment": "Section to configure roles."
            },
            "rolesMapping": {
              "type": ["array", "null"],
              "$comment": "Section to configure rolesmapping."
            }
          },
          "required": [
            "enabled",
            "anonymous_auth_enabled",
            "order_of_authentication",
            "authorizationRules_configMapName",
            "jwt_auth",
            "openid_auth"
          ]
        },
        "index_management": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "$comment": "Enable/Disable Index Management"
            },
            "job_interval_in_minutes": {
              "type": "integer",
              "$comment": "Job interval between transitions. i.e., Job interval between initializing policy, validating the condition and performing the necessary action."
            },
            "policies": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "$comment": "Description of the policy"
                  },
                  "indices": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "$comment": "List of indices needs to be mapped to the policy."
                    }
                  },
                  "priority": {
                    "type": "integer",
                    "$comment": "Priority of the policy."
                  },
                  "states": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "$comment": "Name of the state"
                        },
                        "transitions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "condition": {
                                "type": "string",
                                "$comment": "Condition to meet to move to destination state."
                              },
                              "destination_state": {
                                "type": "string",
                                "$comment": "Destination state to move if above condition satisfies."
                              }
                            },
                            "required": ["condition", "destination_state"]
                          }
                        },
                        "actions": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "$comment": "List of actions to be performed while entering into this state."
                          }
                        }
                      },
                      "required": ["name"],
                      "anyOf": [
                        {
                          "required": ["transitions"]
                        },
                        {
                          "required": ["actions"]
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "description",
                  "indices",
                  "priority",
                  "states"
                ]
              }
            },
            "delete_indices_by_diskspace": {
              "type": ["array", "null"],
              "items": {
                "type": "object",
                "properties": {
                  "index": {
                    "type": "string",
                    "$comment": "Index name to delete",
                    "examples": ["adp-app-logs-*"]
                  },
                  "size": {
                    "type": "string",
                    "$comment": "Index size to consider for deletion",
                    "pattern": "^(((\\d|\\d.\\d)+(mb|gb))|(\\d+%))$",
                    "examples": ["500mb", "4.5gb", "60%"]
                  }
                },
                "required": ["index", "size"]
              }
            }
          },
          "required": [
            "enabled",
            "job_interval_in_minutes",
            "policies"
          ]
        },
        "indices": {
          "type": "object",
          "properties": {
            "query_bool_max_clause_count": {
              "type": "integer",
              "$comment": "Sets the value for query boolean max clause count which helps to prevent performance issues and potential resource exhaustion by limiting the complexity of boolean queries.",
              "minimum": 1
            }
          },
          "required": ["query_bool_max_clause_count"]
        },
        "logLevel": {
          "enum": ["debug", "info", "warning", "error"],
          "$comment": "Sets the service log level options"
        },
        "updateStrategy": {
          "type": "object",
          "properties": {
            "master": {
              "type": "object",
              "properties": {
                "rollingUpdate": {
                  "type": "object",
                  "properties": {
                    "partition": {
                      "type": "integer",
                      "$comment": "Partition to update during rollingUpdate"
                    }
                  },
                  "required": ["partition"]
                }
              },
              "required": ["rollingUpdate"]
            },
            "data": {
              "type": "object",
              "properties": {
                "rollingUpdate": {
                  "type": "object",
                  "properties": {
                    "partition": {
                      "type": "integer",
                      "$comment": "Partition to update during rollingUpdate"
                    }
                  },
                  "required": ["partition"]
                }
              },
              "required": ["rollingUpdate"]
            }
          },
          "required": ["master", "data"]
        },
        "probes": {
          "type": "object",
          "properties": {
            "ingest": {
              "type": "object",
              "properties": {
                "livenessProbe": {
                  "type": "object",
                  "properties": {
                    "successThreshold": {
                      "type": "integer",
                      "$comment": "Number of successes before considering the probe successful"
                    }
                  },
                  "required": ["successThreshold"]
                },
                "startupProbe": {
                  "type": "object",
                  "properties": {
                    "successThreshold": {
                      "type": "integer",
                      "$comment": "Number of successes before considering the probe successful"
                    }
                  },
                  "required": ["successThreshold"]
                }
              },
              "required": ["livenessProbe", "startupProbe"]
            },
            "master": {
              "type": "object",
              "properties": {
                "livenessProbe": {
                  "type": "object",
                  "properties": {
                    "successThreshold": {
                      "type": "integer",
                      "$comment": "Number of successes before considering the probe successful"
                    }
                  },
                  "required": ["successThreshold"]
                },
                "startupProbe": {
                  "type": "object",
                  "properties": {
                    "successThreshold": {
                      "type": "integer",
                      "$comment": "Number of successes before considering the probe successful"
                    }
                  },
                  "required": ["successThreshold"]
                }
              },
              "required": ["livenessProbe", "startupProbe"]
            },
            "data": {
              "type": "object",
              "properties": {
                "livenessProbe": {
                  "type": "object",
                  "properties": {
                    "successThreshold": {
                      "type": "integer",
                      "$comment": "Number of successes before considering the probe successful"
                    }
                  },
                  "required": ["successThreshold"]
                },
                "startupProbe": {
                  "type": "object",
                  "properties": {
                    "successThreshold": {
                      "type": "integer",
                      "$comment": "Number of successes before considering the probe successful"
                    }
                  },
                  "required": ["successThreshold"]
                }
              },
              "required": ["livenessProbe", "startupProbe"]
            },
            "metrics": {
              "type": "object",
              "properties": {
                "livenessProbe": {
                  "type": "object",
                  "properties": {
                    "successThreshold": {
                      "type": "integer",
                      "$comment": "Number of successes before considering the probe successful"
                    }
                  },
                  "required": ["successThreshold"]
                },
                "startupProbe": {
                  "type": "object",
                  "properties": {
                    "successThreshold": {
                      "type": "integer",
                      "$comment": "Number of successes before considering the probe successful"
                    }
                  },
                  "required": ["successThreshold"]
                }
              },
              "required": ["livenessProbe", "startupProbe"]
            },
            "tlsproxy": {
              "type": "object",
              "properties": {
                "livenessProbe": {
                  "type": "object",
                  "properties": {
                    "successThreshold": {
                      "type": "integer",
                      "$comment": "Number of successes before considering the probe successful"
                    }
                  },
                  "required": ["successThreshold"]
                },
                "startupProbe": {
                  "type": "object",
                  "properties": {
                    "successThreshold": {
                      "type": "integer",
                      "$comment": "Number of successes before considering the probe successful"
                    }
                  },
                  "required": ["successThreshold"]
                }
              },
              "required": ["livenessProbe", "startupProbe"]
            },
            "logshipper": {
              "type": "object",
              "properties": {
                "livenessProbe": {
                  "type": "object",
                  "properties": {
                    "successThreshold": {
                      "type": "integer",
                      "$comment": "Number of successes before considering the probe successful"
                    }
                  },
                  "required": ["successThreshold"]
                }
              },
              "required": ["livenessProbe"]
            }
          },
          "required": [
            "ingest",
            "master",
            "data",
            "metrics",
            "tlsproxy",
            "logshipper"
          ]
        },
        "jvmHeap": {
          "type": "object",
          "properties": {
            "ingest": {
              "type": "string",
              "$comment": "Amount of memory that the Java Virtual Machine allocates for the heap size",
              "pattern": "^\\d+(k|K|m|M|g|G)$",
              "examples": ["1024m", "1G"]
            },
            "master": {
              "type": "string",
              "$comment": "Amount of memory that the Java Virtual Machine allocates for the heap size",
              "pattern": "^\\d+(k|K|m|M|g|G)$",
              "examples": ["1024m", "1G"]
            },
            "data": {
              "type": "string",
              "$comment": "Amount of memory that the Java Virtual Machine allocates for the heap size",
              "pattern": "^\\d+(k|K|m|M|g|G)$",
              "examples": ["1024m", "1G"]
            }
          },
          "required": ["ingest", "master", "data"]
        },
        "brAgent": {
          "type": "object",
          "properties": {
            "backupDataModelConfigMap": {
              "type": ["string", "null"],
              "$comment": "Name of external config-map which is used to define the custom backup data model."
            },
            "orchestrator": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string",
                  "$comment": "Kubernetes service name for accessing the Backup and Restore Orchestrator host."
                },
                "grpcPort": {
                  "type": "integer",
                  "$comment": "Kubernetes service port for accessing the Backup and Restore Orchestrator host."
                }
              },
              "required": ["host", "grpcPort"]
            },
            "cleanRestore": {
              "type": "boolean",
              "$comment": "Allow Search Engine BRA to delete all the existing indices in Search Engine cluster before restore"
            },
            "backupRepository": {
              "type": "object",
              "properties": {
                "type": {
                  "enum": ["s3", "fs"],
                  "$comment": "Sets the Backup and Restore service repository type."
                },
                "s3": {
                  "type": "object",
                  "properties": {
                    "secretName": {
                      "type": ["string", "null"],
                      "$comment": "Specify the custom secret which stores the user names and passwords for connecting to S3 object store."
                    },
                    "userKey": {
                      "type": ["string", "null"],
                      "$comment": "Specify the username key of secret for connecting to S3 object store."
                    },
                    "passKey": {
                      "type": ["string", "null"],
                      "$comment": "Specify the password key of secret for connecting to S3 object store."
                    },
                    "endPoint": {
                      "type": ["string", "null"],
                      "$comment": "Configure the endpoint URL towards S3 object store.a"
                    },
                    "bucketName": {
                      "type": ["string", "null"],
                      "$comment": "Specify the bucket name to be used in S3 object store."
                    }
                  }
                }
              },
              "required": ["type", "s3"]
            }
          },
          "required": [
            "orchestrator",
            "cleanRestore",
            "backupRepository"
          ]
        },
        "fastButUnsafeUpgrade": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "$comment": "Enable fast but unsafe upgrade."
            }
          },
          "required": ["enabled"]
        },
        "partialShardValidation": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "$comment": "Enable only partial shard validation during upgrade."
            }
          },
          "required": ["enabled"]
        },
        "metrics": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "$comment": "Enable service Performance Management metrics"
            },
            "pmServer": {
              "type": "string",
              "$comment": "Kubernetes service name for accessing the PM Server host."
            }
          },
          "required": ["enabled", "pmServer"]
        },
        "clusterDomain": {
          "type": "string",
          "$comment": "Kubernetes cluster domain that is used when populating Subject Alternative Name DNS fields in TLS certificates."
        },
        "logShipper": {
          "type": "object",
          "properties": {
            "logLevel": {
              "enum": ["debug", "info", "warning", "error"],
              "$comment": "Set the logging level for Log Shipper"
            },
            "runAndExit": {
              "enum": [false],
              "default": false,
              "$comment": "To run and exit LogShipper process once logs are collected. WARNING: this value should not be modified!"
            },
            "storage": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "$comment": "Path to mount volume for writing and reading logs."
                },
                "size": {
                  "type": "string",
                  "$comment": "Storage limit for shared volume"
                },
                "medium": {
                  "enum": ["Ephemeral", ""],
                  "$comment": "Which storage medium to use. Empty defaults to Ephemeral storage."
                }
              },
              "required": ["path", "size", "medium"]
            },
            "multilines": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "$comment": "Name of the multiline parser"
                  },
                  "start": {
                    "type": "object",
                    "properties": {
                      "pattern": {
                        "type": "string",
                        "$comment": "Starting regex pattern. Surround the value using single quotes to escape special characters."
                      },
                      "next": {
                        "type": "string",
                        "$comment": "Next continuation rule to scan."
                      }
                    },
                    "required": ["pattern", "next"]
                  },
                  "cont": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "$comment": "Name of continuation rule."
                        },
                        "pattern": {
                          "type": "string",
                          "$comment": "Continuation regex pattern. Surround the value using single quotes to escape special characters."
                        },
                        "next": {
                          "type": "string",
                          "$comment": "Next continuation rule to scan."
                        }
                      },
                      "required": ["name", "pattern", "next"]
                    }
                  }
                },
                "required": ["name", "start", "cont"]
              }
            },
            "input": {
              "type": "object",
              "properties": {
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "$comment": "Enable or disable input."
                      },
                      "paths": {
                        "type": "array",
                        "$comment": "List of files to ship relative from logShipper.storage.path. ",
                        "items": {"type": "string"}
                      },
                      "multilines": {
                        "type": "array",
                        "$comment": "Configure one or more multiline parsers from logShipper.multilines. docker,cri,go,python and java are built-in parsers.",
                        "items": {"type": "string"}
                      }
                    },
                    "required": ["enabled", "paths", "multilines"]
                  }
                }
              },
              "required": ["files"]
            },
            "output": {
              "type": "object",
              "properties": {
                "logTransformer": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "$comment": "Kubernetes service name for accessing the Logstash host."
                    }
                  },
                  "required": ["host"]
                }
              },
              "required": ["logTransformer"]
            },
            "logControlPath": {
              "type": "string",
              "$comment": "Logcontrol configmap path mounted inside the container"
            }
          },
          "required": [
            "logLevel",
            "runAndExit",
            "storage",
            "multilines",
            "input",
            "output",
            "logControlPath"
          ]
        },
        "curator": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "$comment": "Kubernetes service name for accessing the curator host"
            }
          },
          "required": ["host"]
        }
      },
      "required": [
        "acceptDataLossAtDowngrade",
        "indicesToBackupAtDowngrade",
        "autoSetRequiredWorkerNodeSysctl",
        "unassignedNode_leftDelayed_timeout",
        "service",
        "securityPolicy",
        "securityEventLogs",
        "accessMgmt",
        "index_management",
        "indices",
        "logLevel",
        "updateStrategy",
        "probes",
        "jvmHeap",
        "brAgent",
        "fastButUnsafeUpgrade",
        "partialShardValidation",
        "metrics",
        "clusterDomain",
        "logShipper",
        "curator"
      ]
    },
    "urn:adp:helm:schemas:v1:service-name/common": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:service-name/common",
      "type": "object",
      "properties": {
        "probes": {
          "type": "object",
          "properties": {
            "ingest": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-012-AD:v1"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-016-AD:v1"}
              ]
            },
            "master": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-012-AD:v1"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-016-AD:v1"}
              ]
            },
            "data": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-012-AD:v1"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-016-AD:v1"}
              ]
            },
            "bragent": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-012-AD:v1"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-014-AD:v1"}
              ]
            },
            "metrics": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-012-AD:v1"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-016-AD:v1"}
              ]
            },
            "tlsproxy": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-012-AD:v1"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-016-AD:v1"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-014-AD:v1"}
              ]
            },
            "logshipper": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-012-AD:v1"}
          },
          "required": [
            "ingest",
            "master",
            "data",
            "bragent",
            "metrics",
            "tlsproxy",
            "logshipper"
          ]
        },
        "updateStrategy": {
          "type": "object",
          "properties": {
            "ingest": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-025-AD:v1/updateStrategy"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-030-AD:v1/updateStrategy"}
              ]
            },
            "master": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-025-AD:v1/updateStrategy"},
            "data": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-025-AD:v1/updateStrategy"},
            "bragent": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-025-AD:v1/updateStrategy"}
          },
          "required": ["ingest", "master", "data", "bragent"]
        },
        "nodeSelector": {
          "type": "object",
          "properties": {
            "ingest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"},
            "master": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"},
            "data": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"},
            "bragent": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"},
            "preupgradehook": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"},
            "downgradeCreatePVC": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"},
            "downgradePreDump": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"},
            "downgradeCleanPreUpgradeHook": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"},
            "downgradeTriggerPostDump": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"},
            "downgradePostDump": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"},
            "helmtest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"},
            "hooklauncher": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"}
          },
          "required": [
            "ingest",
            "master",
            "data",
            "bragent",
            "preupgradehook",
            "downgradeCreatePVC",
            "downgradePreDump",
            "downgradeCleanPreUpgradeHook",
            "downgradeTriggerPostDump",
            "downgradePostDump",
            "helmtest",
            "hooklauncher"
          ]
        },
        "podDisruptionBudget": {
          "type": "object",
          "properties": {
            "data": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-056-AD:v1/podDisruptionBudget"},
            "ingest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-056-AD:v1/podDisruptionBudget"},
            "master": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-056-AD:v1/podDisruptionBudget"}
          },
          "required": ["data", "ingest", "master"]
        },
        "tolerations": {
          "type": "object",
          "properties": {
            "bragent": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"},
            "data": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"},
            "ingest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"},
            "master": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"},
            "preupgradehook": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"},
            "downgradeCreatePVC": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"},
            "downgradePreDump": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"},
            "downgradeCleanPreUpgradeHook": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"},
            "downgradeTriggerPostDump": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"},
            "downgradePostDump": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"},
            "helmtest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"},
            "hooklauncher": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"}
          },
          "required": [
            "bragent",
            "data",
            "ingest",
            "master",
            "preupgradehook",
            "downgradeCreatePVC",
            "downgradePreDump",
            "downgradeCleanPreUpgradeHook",
            "downgradeTriggerPostDump",
            "downgradePostDump",
            "helmtest",
            "hooklauncher"
          ]
        },
        "terminationGracePeriodSeconds": {
          "type": "object",
          "properties": {
            "bragent": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-080-AD:v1/terminationGracePeriodSeconds"},
            "data": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-080-AD:v1/terminationGracePeriodSeconds"},
            "ingest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-080-AD:v1/terminationGracePeriodSeconds"},
            "master": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-080-AD:v1/terminationGracePeriodSeconds"}
          },
          "required": ["bragent", "data", "ingest", "master"]
        },
        "topologySpreadConstraints": {
          "type": "object",
          "properties": {
            "master": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-090-AD:v1/topologySpreadConstraints"},
            "ingest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-090-AD:v1/topologySpreadConstraints"},
            "data": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-090-AD:v1/topologySpreadConstraints"}
          },
          "required": ["master", "ingest", "data"]
        },
        "imageCredentials": {
          "type": "object",
          "properties": {
            "searchengine": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/imageCredentials"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/imageCredentials"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/imageCredentials"}
              ]
            },
            "metrics": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/imageCredentials"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/imageCredentials"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/imageCredentials"}
              ]
            },
            "tlsproxy": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/imageCredentials"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/imageCredentials"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/imageCredentials"}
              ]
            },
            "bragent": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/imageCredentials"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/imageCredentials"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/imageCredentials"}
              ]
            },
            "helmtest": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/imageCredentials"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/imageCredentials"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/imageCredentials"}
              ]
            },
            "hooklauncher": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/imageCredentials"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/imageCredentials"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/imageCredentials"}
              ]
            }
          },
          "required": [
            "searchengine",
            "metrics",
            "tlsproxy",
            "bragent",
            "helmtest",
            "hooklauncher"
          ],
          "allOf": [
            {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/imageCredentials"},
            {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/imageCredentials"},
            {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/imageCredentials"}
          ]
        },
        "replicaCount": {
          "type": "object",
          "properties": {
            "ingest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/replicaCount-mandatory"},
            "master": {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/replicaCount-mandatory"},
            "data": {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/replicaCount-mandatory"}
          },
          "required": ["ingest", "master", "data"]
        },
        "service": {
          "type": "object",
          "properties": {
            "endpoints": {
              "type": "object",
              "properties": {
                "rest": {
                  "allOf": [
                    {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-113:v1/endpoint/tls/enforced"},
                    {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-113:v1/endpoint/tls/verifyClientCertificate"}
                  ]
                }
              },
              "required": ["rest"]
            }
          },
          "required": ["endpoints"]
        },
        "bandwidth": {
          "type": "object",
          "properties": {
            "data": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-040-AD:v1/bandwidth"},
            "ingest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-040-AD:v1/bandwidth"},
            "master": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-040-AD:v1/bandwidth"},
            "bragent": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-040-AD:v1/bandwidth"}
          },
          "required": ["data", "ingest", "master", "bragent"]
        },
        "resources": {
          "type": "object",
          "properties": {
            "ingest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "master": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "data": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "bragent": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "metrics": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "tlsproxy": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "logshipper": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "sysctl": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "preupgradehook": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "downgradeCreatePVC": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "downgradePreDump": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "downgradeTriggerPostDump": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "downgradeCleanPreUpgradeHook": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "downgradePostDump": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "helmtest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"},
            "hooklauncher": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1"}
          },
          "required": [
            "ingest",
            "master",
            "data",
            "bragent",
            "metrics",
            "tlsproxy",
            "logshipper",
            "sysctl",
            "preupgradehook",
            "downgradeCreatePVC",
            "downgradePreDump",
            "downgradeTriggerPostDump",
            "downgradeCleanPreUpgradeHook",
            "downgradePostDump",
            "helmtest",
            "hooklauncher"
          ]
        },
        "podPriority": {
          "type": "object",
          "properties": {
            "data": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"},
            "ingest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"},
            "master": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"},
            "bragent": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"},
            "preupgradehook": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"},
            "downgradeCreatePVC": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"},
            "downgradePreDump": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"},
            "downgradeCleanPreUpgradeHook": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"},
            "downgradeTriggerPostDump": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"},
            "downgradePostDump": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"},
            "helmtest": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"},
            "hooklauncher": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"}
          },
          "required": [
            "data",
            "ingest",
            "master",
            "bragent",
            "preupgradehook",
            "downgradeCreatePVC",
            "downgradePreDump",
            "downgradeCleanPreUpgradeHook",
            "downgradeTriggerPostDump",
            "downgradePostDump",
            "helmtest",
            "hooklauncher"
          ]
        },
        "persistence": {
          "type": "object",
          "properties": {
            "data": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D470204-055-A:v1"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D470204-057-A:v1"}
              ]
            },
            "backup": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D470204-055-A:v1"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D470204-057-A:v1"}
              ]
            },
            "master": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D470204-055-A:v1"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D470204-057-A:v1"}
              ]
            },
            "downgrade": {
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D470204-055-A:v1"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D470204-057-A:v1"}
              ]
            }
          },
          "required": [
            "data",
            "backup",
            "master",
            "downgrade"
          ]
        }
      },
      "required": [
        "probes",
        "updateStrategy",
        "nodeSelector",
        "podDisruptionBudget",
        "tolerations",
        "terminationGracePeriodSeconds",
        "topologySpreadConstraints",
        "imageCredentials",
        "replicaCount",
        "service",
        "bandwidth",
        "resources",
        "podPriority",
        "persistence"
      ],
      "allOf": [
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/global"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-050-AD:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-057-AD:v1/affinityService"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-061-AD:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-065:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-068:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/global"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/global"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/global"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-113:v1/global"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-115:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-124:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-127:v1/service-level"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-128:v1/service-level"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-133:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-134:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-135:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-136:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-018-AD:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-029:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-059:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-050:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D470218-003-AD:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D470218-006-AD:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D470222-010:v1"},
        {"$ref": "urn:adp:helm:schemas:v1:DR-D470222-030:v1"}
      ]
    },
    "urn:adp:helm:schemas:v1:service-name/strict": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:service-name/strict",
      "properties": {
        "global": true,
        "affinity": {
          "properties": {
            "podAntiAffinity": {"additionalProperties": false},
            "topologyKey": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "labels": {
          "$comment": "Object '.labels' with no contents; cannot generate useful declaration constraints",
          "additionalProperties": false
        },
        "annotations": {
          "$comment": "Object '.annotations' with no contents; cannot generate useful declaration constraints",
          "additionalProperties": false
        },
        "acceptDataLossAtDowngrade": {"additionalProperties": false},
        "indicesToBackupAtDowngrade": {
          "items": {"additionalProperties": false},
          "additionalProperties": false
        },
        "autoSetRequiredWorkerNodeSysctl": {"additionalProperties": false},
        "unassignedNode_leftDelayed_timeout": {"additionalProperties": false},
        "imageCredentials": {
          "properties": {
            "repoPath": {"additionalProperties": false},
            "registry": {
              "properties": {
                "imagePullPolicy": {"additionalProperties": false},
                "url": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "pullSecret": {"additionalProperties": false},
            "searchengine": {
              "properties": {
                "registry": {
                  "properties": {
                    "url": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "repoPath": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "metrics": {
              "properties": {
                "registry": {
                  "properties": {
                    "url": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "repoPath": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "tlsproxy": {
              "properties": {
                "registry": {
                  "properties": {
                    "url": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "repoPath": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "bragent": {
              "properties": {
                "registry": {
                  "properties": {
                    "url": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "repoPath": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "helmtest": {
              "properties": {
                "registry": {
                  "properties": {
                    "url": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "repoPath": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "hooklauncher": {
              "properties": {
                "registry": {
                  "properties": {
                    "url": {"additionalProperties": false},
                    "imagePullPolicy": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "repoPath": {"additionalProperties": false}
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "service": {
          "properties": {
            "name": {"additionalProperties": false},
            "network": {
              "properties": {
                "protocol": {
                  "properties": {
                    "IPv6": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "endpoints": {
              "properties": {
                "internode": {
                  "properties": {
                    "tls": {
                      "properties": {
                        "verifyClientHostname": {"additionalProperties": false}
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "rest": {
                  "properties": {
                    "tls": {
                      "properties": {
                        "enforced": {"additionalProperties": false},
                        "verifyClientCertificate": {"additionalProperties": false},
                        "verifyClientHostname": {"additionalProperties": false}
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "securityPolicy": {
          "properties": {
            "searchengine": {
              "properties": {
                "rolename": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "searchenginehelmtest": {
              "properties": {
                "rolename": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "hooklauncher": {
              "properties": {
                "rolename": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "downgrade": {
              "properties": {
                "rolename": {"additionalProperties": false}
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "podSecurityContext": {
          "properties": {
            "supplementalGroups": {
              "items": {"additionalProperties": false},
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "securityEventLogs": {
          "properties": {
            "modificationAllowedIndices": {
              "$comment": "Array '.securityEventLogs.modificationAllowedIndices' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "accessMgmt": {
          "properties": {
            "enabled": {"additionalProperties": false},
            "anonymous_auth_enabled": {"additionalProperties": false},
            "order_of_authentication": {
              "items": {"additionalProperties": false},
              "additionalProperties": false
            },
            "authorizationRules_configMapName": {"additionalProperties": false},
            "jwt_auth": {
              "properties": {
                "enabled": {"additionalProperties": false},
                "signingKey": {"additionalProperties": false},
                "header": {"additionalProperties": false},
                "subjectKey": {"additionalProperties": false},
                "rolesKey": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "openid_auth": {
              "properties": {
                "enabled": {"additionalProperties": false},
                "iam": {
                  "properties": {
                    "host": {"additionalProperties": false},
                    "port": {"additionalProperties": false},
                    "realm": {"additionalProperties": false},
                    "tls": {
                      "properties": {
                        "enabled": {"additionalProperties": false},
                        "verify_hostnames": {"additionalProperties": false},
                        "sendClientCertificate": {"additionalProperties": false}
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "header": {"additionalProperties": false},
                "subjectKey": {"additionalProperties": false},
                "rolesKey": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "roles": {"additionalProperties": false},
            "rolesMapping": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "index_management": {
          "properties": {
            "enabled": {"additionalProperties": false},
            "job_interval_in_minutes": {"additionalProperties": false},
            "policies": {
              "items": {
                "properties": {
                  "description": {"additionalProperties": false},
                  "indices": {
                    "items": {"additionalProperties": false},
                    "additionalProperties": false
                  },
                  "priority": {"additionalProperties": false},
                  "states": {
                    "items": {
                      "properties": {
                        "name": {"additionalProperties": false},
                        "transitions": {
                          "items": {
                            "properties": {
                              "condition": {"additionalProperties": false},
                              "destination_state": {"additionalProperties": false}
                            },
                            "additionalProperties": false
                          },
                          "additionalProperties": false
                        },
                        "actions": {
                          "items": {"additionalProperties": false},
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "additionalProperties": false
            },
            "delete_indices_by_diskspace": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "terminationGracePeriodSeconds": {
          "properties": {
            "bragent": {"additionalProperties": false},
            "data": {"additionalProperties": false},
            "ingest": {"additionalProperties": false},
            "master": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "indices": {
          "properties": {
            "query_bool_max_clause_count": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "tolerations": {
          "properties": {
            "bragent": {
              "items": {
                "properties": {
                  "key": {"additionalProperties": false},
                  "operator": {"additionalProperties": false},
                  "effect": {"additionalProperties": false},
                  "tolerationSeconds": {"additionalProperties": false}
                },
                "additionalProperties": false
              },
              "additionalProperties": false
            },
            "data": {
              "$comment": "Array '.tolerations.data' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "ingest": {
              "$comment": "Array '.tolerations.ingest' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "master": {
              "$comment": "Array '.tolerations.master' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "preupgradehook": {
              "$comment": "Array '.tolerations.preupgradehook' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "downgradeCreatePVC": {
              "$comment": "Array '.tolerations.downgradeCreatePVC' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "downgradePreDump": {
              "$comment": "Array '.tolerations.downgradePreDump' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "downgradeCleanPreUpgradeHook": {
              "$comment": "Array '.tolerations.downgradeCleanPreUpgradeHook' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "downgradeTriggerPostDump": {
              "$comment": "Array '.tolerations.downgradeTriggerPostDump' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "downgradePostDump": {
              "$comment": "Array '.tolerations.downgradePostDump' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "helmtest": {
              "$comment": "Array '.tolerations.helmtest' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "hooklauncher": {
              "$comment": "Array '.tolerations.hooklauncher' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "logLevel": {"additionalProperties": false},
        "topologySpreadConstraints": {
          "properties": {
            "master": {
              "$comment": "Array '.topologySpreadConstraints.master' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "ingest": {
              "$comment": "Array '.topologySpreadConstraints.ingest' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "data": {
              "$comment": "Array '.topologySpreadConstraints.data' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "networkPolicy": {
          "properties": {
            "enabled": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "bandwidth": {
          "properties": {
            "data": {
              "properties": {
                "maxEgressRate": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "ingest": {
              "properties": {
                "maxEgressRate": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "master": {
              "properties": {
                "maxEgressRate": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "bragent": {
              "properties": {
                "maxEgressRate": {"additionalProperties": false}
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "updateStrategy": {
          "properties": {
            "ingest": {
              "properties": {
                "type": {"additionalProperties": false},
                "rollingUpdate": {
                  "properties": {
                    "maxUnavailable": {"additionalProperties": false},
                    "maxSurge": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "master": {
              "properties": {
                "type": {"additionalProperties": false},
                "rollingUpdate": {
                  "properties": {
                    "partition": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "data": {
              "properties": {
                "type": {"additionalProperties": false},
                "rollingUpdate": {
                  "properties": {
                    "partition": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "bragent": {
              "properties": {
                "type": {"additionalProperties": false}
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "replicaCount": {
          "properties": {
            "ingest": {"additionalProperties": false},
            "master": {"additionalProperties": false},
            "data": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "nodeSelector": {
          "properties": {
            "ingest": {
              "$comment": "Object '.nodeSelector.ingest' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "master": {
              "$comment": "Object '.nodeSelector.master' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "data": {
              "$comment": "Object '.nodeSelector.data' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "bragent": {
              "$comment": "Object '.nodeSelector.bragent' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "preupgradehook": {
              "$comment": "Object '.nodeSelector.preupgradehook' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "downgradeCreatePVC": {
              "$comment": "Object '.nodeSelector.downgradeCreatePVC' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "downgradePreDump": {
              "$comment": "Object '.nodeSelector.downgradePreDump' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "downgradeCleanPreUpgradeHook": {
              "$comment": "Object '.nodeSelector.downgradeCleanPreUpgradeHook' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "downgradeTriggerPostDump": {
              "$comment": "Object '.nodeSelector.downgradeTriggerPostDump' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "downgradePostDump": {
              "$comment": "Object '.nodeSelector.downgradePostDump' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "helmtest": {
              "$comment": "Object '.nodeSelector.helmtest' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            },
            "hooklauncher": {
              "$comment": "Object '.nodeSelector.hooklauncher' with no contents; cannot generate useful declaration constraints",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "podPriority": {
          "properties": {
            "data": {
              "properties": {
                "priorityClassName": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "ingest": {
              "properties": {
                "priorityClassName": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "master": {
              "properties": {
                "priorityClassName": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "bragent": {
              "properties": {
                "priorityClassName": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "preupgradehook": {
              "properties": {
                "priorityClassName": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "downgradeCreatePVC": {
              "properties": {
                "priorityClassName": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "downgradePreDump": {
              "properties": {
                "priorityClassName": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "downgradeCleanPreUpgradeHook": {
              "properties": {
                "priorityClassName": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "downgradeTriggerPostDump": {
              "properties": {
                "priorityClassName": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "downgradePostDump": {
              "properties": {
                "priorityClassName": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "helmtest": {
              "properties": {
                "priorityClassName": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "hooklauncher": {
              "properties": {
                "priorityClassName": {"additionalProperties": false}
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "probes": {
          "properties": {
            "ingest": {
              "properties": {
                "livenessProbe": {
                  "properties": {
                    "periodSeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false},
                    "successThreshold": {"additionalProperties": false},
                    "failureThreshold": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "startupProbe": {
                  "properties": {
                    "initialDelaySeconds": {"additionalProperties": false},
                    "periodSeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false},
                    "successThreshold": {"additionalProperties": false},
                    "failureThreshold": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "master": {
              "properties": {
                "livenessProbe": {
                  "properties": {
                    "periodSeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false},
                    "successThreshold": {"additionalProperties": false},
                    "failureThreshold": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "startupProbe": {
                  "properties": {
                    "initialDelaySeconds": {"additionalProperties": false},
                    "periodSeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false},
                    "successThreshold": {"additionalProperties": false},
                    "failureThreshold": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "data": {
              "properties": {
                "livenessProbe": {
                  "properties": {
                    "periodSeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false},
                    "successThreshold": {"additionalProperties": false},
                    "failureThreshold": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "startupProbe": {
                  "properties": {
                    "initialDelaySeconds": {"additionalProperties": false},
                    "periodSeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false},
                    "successThreshold": {"additionalProperties": false},
                    "failureThreshold": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "bragent": {
              "properties": {
                "livenessProbe": {
                  "properties": {
                    "initialDelaySeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "readinessProbe": {
                  "properties": {
                    "initialDelaySeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "metrics": {
              "properties": {
                "livenessProbe": {
                  "properties": {
                    "periodSeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false},
                    "successThreshold": {"additionalProperties": false},
                    "failureThreshold": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "startupProbe": {
                  "properties": {
                    "initialDelaySeconds": {"additionalProperties": false},
                    "periodSeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false},
                    "successThreshold": {"additionalProperties": false},
                    "failureThreshold": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tlsproxy": {
              "properties": {
                "readinessProbe": {
                  "properties": {
                    "periodSeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false},
                    "successThreshold": {"additionalProperties": false},
                    "failureThreshold": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "livenessProbe": {
                  "properties": {
                    "periodSeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false},
                    "successThreshold": {"additionalProperties": false},
                    "failureThreshold": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "startupProbe": {
                  "properties": {
                    "initialDelaySeconds": {"additionalProperties": false},
                    "periodSeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false},
                    "successThreshold": {"additionalProperties": false},
                    "failureThreshold": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "logshipper": {
              "properties": {
                "livenessProbe": {
                  "properties": {
                    "initialDelaySeconds": {"additionalProperties": false},
                    "timeoutSeconds": {"additionalProperties": false},
                    "periodSeconds": {"additionalProperties": false},
                    "successThreshold": {"additionalProperties": false},
                    "failureThreshold": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "jvmHeap": {
          "properties": {
            "ingest": {"additionalProperties": false},
            "master": {"additionalProperties": false},
            "data": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "resources": {
          "properties": {
            "ingest": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "master": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "data": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "bragent": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "metrics": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tlsproxy": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "logshipper": {
              "properties": {
                "limits": {
                  "properties": {
                    "memory": {"additionalProperties": false},
                    "cpu": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "memory": {"additionalProperties": false},
                    "cpu": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "sysctl": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "preupgradehook": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "downgradeCreatePVC": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "downgradePreDump": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "downgradeTriggerPostDump": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "downgradeCleanPreUpgradeHook": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "downgradePostDump": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "helmtest": {
              "properties": {
                "limits": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "requests": {
                  "properties": {
                    "cpu": {"additionalProperties": false},
                    "memory": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "hooklauncher": {
              "properties": {
                "requests": {
                  "properties": {
                    "memory": {"additionalProperties": false},
                    "cpu": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                },
                "limits": {
                  "properties": {
                    "memory": {"additionalProperties": false},
                    "cpu": {"additionalProperties": false},
                    "ephemeral-storage": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "persistence": {
          "properties": {
            "data": {
              "properties": {
                "persistentVolumeClaim": {
                  "properties": {
                    "size": {"additionalProperties": false},
                    "storageClassName": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "backup": {
              "properties": {
                "persistentVolumeClaim": {
                  "properties": {
                    "size": {"additionalProperties": false},
                    "storageClassName": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "master": {
              "properties": {
                "persistentVolumeClaim": {
                  "properties": {
                    "size": {"additionalProperties": false},
                    "storageClassName": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "downgrade": {
              "properties": {
                "persistentVolumeClaim": {
                  "properties": {
                    "size": {"additionalProperties": false},
                    "storageClassName": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "podDisruptionBudget": {
          "properties": {
            "data": {
              "properties": {
                "maxUnavailable": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "ingest": {
              "properties": {
                "maxUnavailable": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "master": {
              "properties": {
                "maxUnavailable": {"additionalProperties": false}
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "brAgent": {
          "properties": {
            "enabled": {"additionalProperties": false},
            "backupTypeList": {"additionalProperties": false},
            "backupDataModelConfigMap": {"additionalProperties": false},
            "orchestrator": {
              "properties": {
                "host": {"additionalProperties": false},
                "grpcPort": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "cleanRestore": {"additionalProperties": false},
            "backupRepository": {
              "properties": {
                "type": {"additionalProperties": false},
                "s3": {
                  "properties": {
                    "secretName": {"additionalProperties": false},
                    "userKey": {"additionalProperties": false},
                    "passKey": {"additionalProperties": false},
                    "endPoint": {"additionalProperties": false},
                    "bucketName": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "fastButUnsafeUpgrade": {
          "properties": {
            "enabled": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "partialShardValidation": {
          "properties": {
            "enabled": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "metrics": {
          "properties": {
            "enabled": {"additionalProperties": false},
            "pmServer": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "clusterDomain": {"additionalProperties": false},
        "logShipper": {
          "properties": {
            "logLevel": {"additionalProperties": false},
            "runAndExit": {"additionalProperties": false},
            "storage": {
              "properties": {
                "path": {"additionalProperties": false},
                "size": {"additionalProperties": false},
                "medium": {"additionalProperties": false}
              },
              "additionalProperties": false
            },
            "multilines": {
              "items": {
                "properties": {
                  "name": {"additionalProperties": false},
                  "start": {
                    "properties": {
                      "pattern": {"additionalProperties": false},
                      "next": {"additionalProperties": false}
                    },
                    "additionalProperties": false
                  },
                  "cont": {
                    "items": {
                      "properties": {
                        "name": {"additionalProperties": false},
                        "pattern": {"additionalProperties": false},
                        "next": {"additionalProperties": false}
                      },
                      "additionalProperties": false
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "additionalProperties": false
            },
            "input": {
              "properties": {
                "files": {
                  "items": {
                    "properties": {
                      "enabled": {"additionalProperties": false},
                      "paths": {
                        "items": {"additionalProperties": false},
                        "additionalProperties": false
                      },
                      "multilines": {
                        "items": {"additionalProperties": false},
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "output": {
              "properties": {
                "logTransformer": {
                  "properties": {
                    "host": {"additionalProperties": false}
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "logControlPath": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "log": {
          "properties": {
            "streamingMethod": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "curator": {
          "properties": {
            "host": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "seccompProfile": {
          "properties": {
            "type": {"additionalProperties": false},
            "localhostProfile": {"additionalProperties": false}
          },
          "additionalProperties": false
        },
        "appArmorProfile": {
          "properties": {
            "type": {"additionalProperties": false},
            "localhostProfile": {"additionalProperties": false}
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "8884504b-5f12-4f35-abe4-c6fbbc90659c": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1114-310:v1",
      "title": "DR-D1114-310",
      "description": "The option about how to create the log control ConfigMap shall be configurable and exposed to allow to set the option log control ConfigMap created by the service or the option log control ConfigMap not created by the service",
      "$comment": "global.log.createControlConfigmap",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "log": {
              "type": "object",
              "properties": {
                "createControlConfigmap": {
                  "description": "Indicate which option has to be chosen by all services to create the log control ConfigMap, default is true indicating the ConfigMap is created by the service",
                  "enum": ["true", "false"],
                  "examples": ["true", "false"]
                }
              }
            }
          }
        }
      }
    },
    "ff98bbef-3b59-4075-9a14-d98a4f144b68": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1118-030:v1",
      "title": "DR-D1118-030",
      "description": "NeLS Site Configuration",
      "$comment": "global.licensing.sites",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "licensing": {
              "type": ["object", "null"],
              "properties": {
                "sites": {
                  "description": "List of key/value pairs of NeLS site configuration attributes",
                  "type": ["array", "null"],
                  "minItems": 0,
                  "maxItems": 5,
                  "items": {
                    "type": "object",
                    "properties": {
                      "hostname": {
                        "description": "The hostname or a full qualified name of NeLS site",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 253,
                        "$comment": "This regex has been checked and confirmed not vulnerable to ReDoS attacks",
                        "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$",
                        "examples": ["localnels", "nels.site.ericsson.com"]
                      },
                      "ip": {
                        "description": "The IP address (IPv4 or IPv6) of NeLS site",
                        "type": ["string", "null"],
                        "minLength": 0,
                        "maxLength": 39,
                        "$comment": "This regex was taken from ADP LM validation logic, with empty string added. It has been checked and confirmed not vulnerable to ReDoS attacks.",
                        "pattern": "(^((([0-9][1-9])|([1-9][0-9])|[1-9]|1[0-1][0-9]|12[0-6]|12[8-9]|1[3-9][0-9]|2[0-5][0-5])\\.)((([2][5][0-5]|([2][0-4]|[1][0-9]|[0-9])?[0-9])\\.){2})([2][5][0-5]|([2][0-4]|[1][0-9]|[0-9])?[0-9])$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}(([0-9A-Fa-f]{1,4})|:))|(([0-9A-Fa-f]{1,4}:){6}(:|((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})|(:[0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){5}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){4}(:[0-9A-Fa-f]{1,4}){0,1}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){3}(:[0-9A-Fa-f]{1,4}){0,2}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){2}(:[0-9A-Fa-f]{1,4}){0,3}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:)(:[0-9A-Fa-f]{1,4}){0,4}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(:(:[0-9A-Fa-f]{1,4}){0,5}((:((25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})(\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9]{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2}))))(%.+)?\\s*$)|(^$)",
                        "examples": [
                          null,
                          "192.168.1.1",
                          "fe80::9656:d028:8652:66b6"
                        ]
                      },
                      "priority": {
                        "description": "A priority assigned to a NeLS site. A lower number signifies higher priority.",
                        "type": ["integer", "null"],
                        "minimum": 0,
                        "maximum": 100,
                        "default": 100,
                        "examples": [null, 17]
                      }
                    },
                    "required": ["hostname"]
                  }
                }
              }
            }
          }
        }
      }
    },
    "1bf42ec8-a104-46ea-83d3-f27c6db70834": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-012-AD:v1",
      "title": "DR-D1120-012-AD",
      "description": "ADP container liveness probe configuration",
      "$comment": "probes.*.livenessProbe.timeoutSeconds",
      "type": "object",
      "properties": {
        "livenessProbe": {"$ref": "urn:adp:helm:schemas:v1:container-probes-common:v1/basicContainerProbe"}
      },
      "required": ["livenessProbe"]
    },
    "15fd9c5d-83b4-4efa-810a-a78fae47edca": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-014-AD:v1",
      "title": "DR-D1120-014-AD",
      "description": "ADP container readiness probe configuration",
      "$comment": "probes.*.readinessProbe.timeoutSeconds",
      "type": "object",
      "properties": {
        "readinessProbe": {"$ref": "urn:adp:helm:schemas:v1:container-probes-common:v1/fullContainerProbe"}
      },
      "required": ["readinessProbe"]
    },
    "ce19c9f5-c872-4c54-b7a0-684288975ce0": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-016-AD:v1",
      "title": "DR-D1120-016-AD",
      "description": "ADP container startup probe configuration",
      "$comment": "probes.*.startupProbe.timeoutSeconds",
      "type": "object",
      "properties": {
        "startupProbe": {"$ref": "urn:adp:helm:schemas:v1:container-probes-common:v1/basicContainerProbe"}
      },
      "required": ["startupProbe"]
    },
    "d34dad13-c5dd-48ba-a7d6-2f9777526944": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-025-AD:v1",
      "title": "DR-D1120-025-AD",
      "description": "ADP update strategy type configuration",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "updateStrategy-service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-025-AD:v1/service-level",
          "$comment": "Common schema variant for a single pod service that defines update strategy at service level",
          "type": "object",
          "properties": {
            "updateStrategy": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-025-AD:v1/updateStrategy"}
          },
          "required": ["updateStrategy"]
        },
        "updateStrategy": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-025-AD:v1/updateStrategy",
          "$comment": "Common schema variant for a multi pod service that defines update strategy at pod level",
          "type": "object",
          "properties": {
            "type": {
              "description": "Update strategy that will be employed to update pods when a template is updated with new revision",
              "$comment": "k8sCheckedValue: updateStrategy[.*].type",
              "not": {"type": "null"},
              "examples": [
                "RollingUpdate",
                "Recreate",
                "OnDelete"
              ]
            }
          },
          "required": ["type"]
        }
      }
    },
    "068c85a9-437c-46b7-9f40-bd7aac121fb0": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-030-AD:v1",
      "title": "DR-D1120-030-AD",
      "description": "Rolling update controller configuration",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "updateStrategy-service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-030-AD:v1/service-level",
          "$comment": "Common schema variant for a single pod service that defines update strategy at service level",
          "properties": {
            "updateStrategy": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-030-AD:v1/updateStrategy"}
          },
          "required": ["updateStrategy"]
        },
        "updateStrategy": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-030-AD:v1/updateStrategy",
          "$comment": "Common schema variant for a multi pod service that defines update strategy at pod level",
          "type": ["object"],
          "properties": {
            "rollingUpdate": {
              "type": ["object"],
              "allOf": [
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-030-AD:v1/rollingUpdate/maxUnavailable"},
                {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-030-AD:v1/rollingUpdate/maxSurge"}
              ]
            }
          },
          "required": ["rollingUpdate"]
        },
        "rollingUpdate-maxUnavailable": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-030-AD:v1/rollingUpdate/maxUnavailable",
          "$comment": "Rolling update controller maxUnavailable configuration",
          "properties": {
            "maxUnavailable": {
              "description": "The maximum number of pods that can be unavailable during the update process",
              "$comment": "k8sCheckedValue: updateStrategy[.*].rollingUpdate.maxUnavailable",
              "examples": ["25%", 1]
            }
          }
        },
        "rollingUpdate-maxSurge": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-030-AD:v1/rollingUpdate/maxSurge",
          "$comment": "Rolling update controller maxSurge configuration",
          "properties": {
            "maxSurge": {
              "description": "The maximum number of pods that can be created over the desired number of pods",
              "$comment": "k8sCheckedValue: updateStrategy[.*].rollingUpdate.maxSurge",
              "examples": ["50%", 0]
            }
          }
        }
      }
    },
    "ff3e0ccc-e1a5-42fe-87cc-964e1b912543": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1",
      "title": "DR-D1120-045-AD",
      "description": "Node selector configuration for workload API objects",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "nodeSelector-global": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/global",
          "$comment": "Common schema variant for the global node selector parameter",
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "nodeSelector": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"}
              }
            }
          }
        },
        "nodeSelector-service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/service-level",
          "$comment": "Common schema variant for a single pod service that defines node selector at service level",
          "properties": {
            "nodeSelector": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector"}
          }
        },
        "nodeSelector": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-045-AD:v1/nodeSelector",
          "$comment": "Common schema variant for a multi pod service that defines node selectors at pod level",
          "type": ["object", "null"],
          "additionalProperties": {
            "description": "Node label that must be satisfied",
            "$comment": "k8sCheckedValue: nodeSelector[.*]"
          },
          "examples": [
            {
              "disktype": "ssd",
              "region": "west"
            }
          ]
        }
      }
    },
    "1364d21a-55a3-4f7f-b639-6c1f95e80d77": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-050-AD:v1",
      "title": "DR-D1120-050-AD",
      "deprecated": true,
      "description": "Provide basic fault-tolerance by spreading pod replicas across different nodes",
      "$comment": "DR is only applicable to workloads that support multiple replicas",
      "type": "object",
      "properties": {
        "affinity": {
          "type": "object",
          "properties": {
            "podAntiAffinity": {
              "description": "Specify whether it is a (soft) preference that pod replicas be scheduled on different cluster nodes if possible, or a (hard) requirement.",
              "enum": ["soft", "hard"],
              "examples": ["soft", "hard"]
            }
          },
          "required": ["podAntiAffinity"]
        }
      },
      "required": ["affinity"]
    },
    "d5560e9d-ba64-4bf2-b442-e263a8778c25": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-056-AD:v1",
      "title": "DR-D1120-056-AD",
      "description": "Configure availability during voluntary disruptions",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "podDisruptionBudget-service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-056-AD:v1/service-level",
          "$comment": "Common schema variant for a single pod service that defines pod disruption budget at service level",
          "properties": {
            "podDisruptionBudget": {
              "$comment": "Note that we do not specify type object here, as the referenced rule will anyway fail if it is not",
              "$ref": "urn:adp:helm:schemas:v1:DR-D1120-056-AD:v1/podDisruptionBudget"
            }
          },
          "required": ["podDisruptionBudget"]
        },
        "podDisruptionBudget": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-056-AD:v1/podDisruptionBudget",
          "$comment": "Ensure that at lease one of the values is not null. Both may not be set, but that is checked by k8s.",
          "anyOf": [
            {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-056-AD:v1/podDisruptionBudget/minAvailable"},
            {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-056-AD:v1/podDisruptionBudget/maxUnavailable"}
          ]
        },
        "podDisruptionBudgetMinAvailable": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-056-AD:v1/podDisruptionBudget/minAvailable",
          "type": "object",
          "properties": {
            "minAvailable": {
              "description": "Minimum number of pods to remain available during voluntary disruptions",
              "$comment": "k8sCheckedValue: podDisruptionBudget[.*].minAvailable",
              "not": {"type": "null"},
              "examples": ["50%", 2]
            },
            "maxUnavailable": {"$comment": "Must not be set alongside minAvailable, but this is checked by k8s"}
          },
          "required": ["minAvailable"]
        },
        "podDisruptionBudgetMaxUnavailable": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-056-AD:v1/podDisruptionBudget/maxUnavailable",
          "type": "object",
          "properties": {
            "minAvailable": {"$comment": "Must not be set alongside maxUnavailable, but this is checked by k8s"},
            "maxUnavailable": {
              "description": "Maximum number of pods to evict concurrently during voluntary disruptions",
              "$comment": "k8sCheckedValue: podDisruptionBudget[.*].maxUnavailable",
              "not": {"type": "null"},
              "examples": ["25%", 1]
            }
          },
          "required": ["maxUnavailable"]
        }
      }
    },
    "c136cee5-822e-4330-90a3-26eaaa6fadad": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-057-AD:v1",
      "title": "DR-D1120-057-AD",
      "description": "In order to minimize the impact of failure the replicas should be avoided to be scheduled on same failure domain",
      "$comment": "DR is only applicable to workloads that support multiple replicas",
      "allOf": [false],
      "$defs": {
        "affinityService": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-057-AD:v1/affinityService",
          "$comment": "Common schema variant for a single pod service that defines affinity at service level",
          "properties": {
            "affinity": {
              "type": "object",
              "$ref": "urn:adp:helm:schemas:v1:DR-D1120-057-AD:v1/affinity"
            }
          },
          "required": ["affinity"]
        },
        "affinity": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-057-AD:v1/affinity",
          "$comment": "Common schema variant for a multi pod service that defines affinity at pod level",
          "$ref": "urn:adp:helm:schemas:v1:DR-D1120-057-AD:v1/affinity/affinitySchedulingPreference"
        },
        "affinitySchedulingPreference": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-057-AD:v1/affinity/affinitySchedulingPreference",
          "type": "object",
          "properties": {
            "podAntiAffinity": {
              "description": "Specify whether it is a (soft) preference that pod replicas be scheduled on different cluster nodes if possible, or a (hard) requirement.",
              "enum": ["soft", "hard"]
            },
            "topologyKey": {
              "description": "The topology key to use as the failure domain",
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "examples": ["kubernetes.io/hostname"]
            }
          },
          "required": ["podAntiAffinity", "topologyKey"]
        }
      }
    },
    "703e009c-d94f-4786-ac37-75f72a7090f6": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1",
      "title": "DR-D1120-060-AD",
      "description": "Scheduling tolerations configuration",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "tolerations-service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/service-level",
          "$comment": "Common schema variant for a single pod service that defines tolerations at service level",
          "properties": {
            "tolerations": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations"}
          },
          "required": ["tolerations"]
        },
        "tolerations": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-060-AD:v1/tolerations",
          "$comment": "Common schema variant for a multi pod service that defines tolerations at pod level",
          "type": "array",
          "items": {
            "description": "Toleration allowing a pod to schedule / execute on tainted nodes",
            "$comment": "k8sCheckedValue: tolerations[.*]",
            "examples": [
              {
                "key": "dedicated",
                "operator": "Equal",
                "value": "elasticsearch",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 30
              }
            ]
          }
        }
      }
    },
    "d11064bd-8484-4564-a787-7dbd07315ae8": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-061-AD:v1",
      "title": "DR-D1120-061-AD",
      "description": "Configuration of global tolerations",
      "$comment": "global.tolerations(*)",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "tolerations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "Taint key that the toleration applies to. If empty, operator must be Exist and the combination means to match all values and all keys",
                    "type": "string",
                    "maxLength": 63
                  },
                  "operator": {
                    "description": "Represents the relationship between a key and value",
                    "type": "string",
                    "enum": ["Exists", "Equal"]
                  },
                  "effect": {
                    "description": "Indicates the taint effect to match",
                    "type": "string",
                    "enum": [
                      "NoSchedule",
                      "PreferNoSchedule",
                      "NoExecute"
                    ]
                  },
                  "tolerationSeconds": {
                    "description": "Represents the period of time the toleration can tolerate the taint. This field only applies to NoExecute effect",
                    "type": "integer",
                    "minimum": 0
                  }
                },
                "if": {
                  "properties": {
                    "operator": {
                      "enum": ["Equal"]
                    }
                  }
                },
                "then": {
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Taint value that the toleration matches to. If operator is 'Exists', it must be empty. Otherwise, a regular string"
                    }
                  },
                  "$comment": "operator is set to Equals, value is required",
                  "required": ["value"]
                },
                "required": ["key", "operator", "effect"]
              }
            }
          }
        }
      }
    },
    "eefe71ba-d6ec-4c7d-9b06-3c2466510c4c": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-080-AD:v1",
      "title": "DR-D1120-080-AD",
      "description": "Configure upper bounds on graceful termination time",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "terminationGracePeriodSeconds-service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-080-AD:v1/service-level",
          "$comment": "Common schema variant for a single pod service that defines termination grace period seconds at service level",
          "properties": {
            "terminationGracePeriodSeconds": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-080-AD:v1/terminationGracePeriodSeconds"}
          },
          "required": ["terminationGracePeriodSeconds"]
        },
        "terminationGracePeriodSeconds": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-080-AD:v1/terminationGracePeriodSeconds",
          "$comment": "k8sCheckedValue: terminationGracePeriodSeconds[.*]",
          "description": "Grace period in seconds for a container to shut down before being forcibly killed",
          "minimum": 1,
          "examples": [30]
        }
      }
    },
    "fe46591c-ea90-4de6-a7e6-79d739e1acdb": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1120-090-AD:v1",
      "title": "DR-D1120-090-AD",
      "description": "Scheduling topology spread configuration",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "topologySpreadConstraints-service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-090-AD:v1/service-level",
          "$comment": "Common schema variant for a single pod service that defines topology spread constraints at service level",
          "properties": {
            "topologySpreadConstraints": {"$ref": "urn:adp:helm:schemas:v1:DR-D1120-090-AD:v1/topologySpreadConstraints"}
          },
          "required": ["topologySpreadConstraints"]
        },
        "topologySpreadConstraints-pod": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1120-090-AD:v1/topologySpreadConstraints",
          "$comment": "Common schema variant for a multi pod service that defines topology spread constraints at pod level",
          "type": "array",
          "items": {
            "description": "Topology spread constraint",
            "$comment": "k8sCheckedValue: topologySpreadConstraints[.*]",
            "examples": [
              {
                "maxSkew": 2,
                "topologyKey": "kubernetes.io/hostname",
                "whenUnsatisfiable": "DoNotSchedule"
              }
            ]
          }
        }
      }
    },
    "34acff73-9965-4bcc-a6d2-0792ef736908": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1121-060:v1",
      "title": "DR-D1121-060",
      "description": "Umbrella-wide labels and annotations for chart-managed resources",
      "$comment": "global.annotations",
      "type": "object",
      "properties": {
        "global": {
          "type": ["null", "object"],
          "properties": {
            "annotations": {"$ref": "urn:adp:helm:schemas:v1:labels-and-annotations-common:v1/annotations"},
            "labels": {"$ref": "urn:adp:helm:schemas:v1:labels-and-annotations-common:v1/labels"}
          }
        }
      }
    },
    "52c089bd-a6b9-4105-b237-348ee3dfc8d2": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1121-065:v1",
      "title": "DR-D1121-065",
      "description": "Service-level annotations for chart-managed resources",
      "$comment": "annotations",
      "type": "object",
      "properties": {
        "annotations": {"$ref": "urn:adp:helm:schemas:v1:labels-and-annotations-common:v1/annotations"}
      }
    },
    "f9285988-f9e9-4e86-b4c0-af8f1971b7c7": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1121-068:v1",
      "title": "DR-D1121-068",
      "description": "Service-level labels for chart-managed resources",
      "$comment": "labels",
      "type": "object",
      "properties": {
        "labels": {"$ref": "urn:adp:helm:schemas:v1:labels-and-annotations-common:v1/labels"}
      }
    },
    "07a9b619-9b5d-498b-8168-d36448e9af07": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1121-102:v1",
      "title": "DR-D1121-102",
      "description": "Image registry pull policy configurations",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "imageCredentials-global": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/global",
          "$comment": "Common schema variant for the global image registry pull policy parameter",
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "registry": {
                  "type": ["object", "null"],
                  "properties": {
                    "imagePullPolicy": {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/imagePullPolicy"}
                  }
                }
              }
            }
          }
        },
        "imageCredentials": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/imageCredentials",
          "$comment": "Common schema to define the registry.imagePullPolicy portion of imageCredentials",
          "type": "object",
          "properties": {
            "registry": {
              "type": "object",
              "properties": {
                "imagePullPolicy": {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/imagePullPolicy"}
              }
            }
          },
          "required": ["registry"]
        },
        "imagePullPolicy": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1121-102:v1/imagePullPolicy",
          "description": "Defines kubernetes behavior for fetching container images",
          "$comment": "k8sCheckedValue: imageCredentials.*.registry.imagePullPolicy",
          "examples": ["IfNotPresent", "Always", "Never"]
        }
      }
    },
    "99a1d7c2-fd66-43b1-b0ad-d88053a96c7c": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1121-104:v1",
      "title": "DR-D1121-104",
      "description": "Image registry url configurations",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "imageRegistry-global": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/global",
          "$comment": "Common schema variant for the global image registry url parameter",
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "registry": {
                  "type": ["object", "null"],
                  "properties": {
                    "url": {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/url"}
                  }
                }
              }
            }
          }
        },
        "imageCredentials": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/imageCredentials",
          "$comment": "Common schema to define the registry.url portion of imageCredentials",
          "type": "object",
          "properties": {
            "registry": {
              "type": "object",
              "properties": {
                "url": {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/url"}
              }
            }
          },
          "required": ["registry"]
        },
        "url": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1121-104:v1/url",
          "type": ["string", "null"],
          "description": "Image registry url for container images",
          "$comment": "Could the value space be defined here? Is this always a host name?",
          "examples": ["armdocker.rnd.ericsson.se"]
        }
      }
    },
    "86a3b6ef-40fa-4de1-9337-b079b833e1cd": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1121-105:v1",
      "title": "DR-D1121-105",
      "deprecated": true,
      "description": "Configuration of image repository path",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "imageCredentials": {
          "$comment": "repoPath portion of imageCredentials",
          "$id": "urn:adp:helm:schemas:v1:DR-D1121-105:v1/imageCredentials",
          "deprecated": true,
          "type": ["object", "null"],
          "properties": {
            "repoPath": {
              "type": ["string", "null"],
              "description": "Path in the image registry to the image repo",
              "examples": ["proj-adp-ref-released"]
            }
          }
        }
      }
    },
    "16847037-8895-42ce-abbb-f1ff92b712a6": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1121-106:v1",
      "title": "DR-D1121-106",
      "description": "Configuration of image repository path",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "imageRepoPath-global": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/global",
          "$comment": "Common schema variant for the global image repo path parameter",
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "registry": {
                  "type": ["object", "null"],
                  "properties": {
                    "repoPath": {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/repoPath"}
                  }
                }
              }
            }
          }
        },
        "imageCredentials": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/imageCredentials",
          "$comment": "Common schema to define the repoPath portion of imageCredentials",
          "type": "object",
          "properties": {
            "repoPath": {"$ref": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/repoPath"}
          }
        },
        "repoPath": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1121-106:v1/repoPath",
          "description": "Path in the image registry to the image repo",
          "type": ["string", "null"],
          "pattern": "^[a-z0-9A-Z_\\.\\-\\/]*$",
          "examples": ["proj-adp-ref-released"]
        }
      }
    },
    "d636e4ee-1c5e-48b3-a955-be66279cc56a": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1121-120:v1",
      "title": "DR-D1121-120",
      "description": "Override the base name for chart resources",
      "$comment": "nameOverride",
      "type": "object",
      "properties": {
        "nameOverride": {
          "type": ["null", "string"],
          "description": "Override the base name used for chart-managed objects",
          "examples": ["custom-name-prefix"]
        }
      }
    },
    "6af0451f-e0fa-403b-bbb1-e2990a1c2fc1": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1122-131:v1",
      "title": "DR-D1122-131",
      "description": "Manual and auto-scaling parameters",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "mixedScaling-service-level": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/service-level",
          "$comment": "Common schema variant to define automatic and manual scaling at the service-level",
          "properties": {
            "autoScaling": {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/autoScaling"},
            "replicaCount": {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/replicaCount"}
          },
          "required": ["autoScaling", "replicaCount"],
          "anyOf": [
            {
              "properties": {
                "autoScaling": {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/autoScaling-isEnabled"}
              }
            },
            {
              "properties": {
                "replicaCount": {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/replicaCount-isEnabled"}
              }
            }
          ]
        },
        "autoScaling-service-level": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/service-level/autoScaling",
          "$comment": "Common schema variant to define mandatory automatic scaling at the service-level",
          "properties": {
            "autoScaling": {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/autoScaling-mandatory"}
          },
          "required": ["autoScaling"]
        },
        "replicaCount-service-level": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/service-level/replicaCount",
          "$comment": "Common schema variant to define mandatory manual scaling at the service-level",
          "properties": {
            "replicaCount": {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/replicaCount-mandatory"}
          },
          "required": ["replicaCount"]
        },
        "replicaCount-mandatory": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/replicaCount-mandatory",
          "$comment": "Common schema variant for a pod that only supports replicaCount (manual) scaling",
          "allOf": [
            {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/replicaCount"},
            {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/replicaCount-isEnabled"}
          ]
        },
        "autoScaling-mandatory": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/autoScaling-mandatory",
          "$comment": "Common schema variant for a pod that only supports autoscaling",
          "allOf": [
            {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/autoScaling"},
            {"$ref": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/autoScaling-isEnabled"}
          ]
        },
        "replicaCount-isEnabled": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/replicaCount-isEnabled",
          "$comment": "Common schema variant to require that replicaCount (manual) scaling is enabled (services must require at least one form of scaling)",
          "type": "integer",
          "examples": [1]
        },
        "replicaCount": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/replicaCount",
          "$comment": "k8sCheckedValue: replicaCount[.*]",
          "description": "Fixed number of pod replicas; used if autoScaling is not supported or disabled",
          "type": ["integer", "null"],
          "examples": [3]
        },
        "autoScaling-isEnabled": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/autoScaling-isEnabled",
          "$comment": "Common schema variant to require that autoScaling enabled (services must require at least one form of scaling)",
          "type": "object",
          "properties": {
            "enabled": {"const": true}
          },
          "required": ["enabled"]
        },
        "autoScaling": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1122-131:v1/autoScaling",
          "$comment": "Common schema for optional autoScaling",
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable or disable the horizontal pod autoscaler",
              "examples": [true]
            },
            "minReplicas": {
              "description": "Minimum number of replicas the HPA will keep up",
              "$comment": "k8sCheckedValue: autoScaling[.*].minReplicas",
              "examples": [2]
            },
            "maxReplicas": {
              "description": "Maximum number of replicas the HPA will keep up",
              "$comment": "k8sCheckedValue: autoScaling[.*].maxReplicas",
              "examples": [5]
            }
          },
          "required": ["enabled"],
          "if": {
            "properties": {
              "enabled": {"const": true}
            },
            "required": ["enabled"]
          },
          "then": {
            "required": ["minReplicas", "maxReplicas"]
          }
        }
      }
    },
    "086ad2fd-0f4b-4aa4-8128-75878574b112": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1123-113:v1",
      "title": "DR-D1123-113",
      "description": "TLS toggle and endpoint configuration",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "global": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-113:v1/global",
          "$comment": "Common schema variant for the global TLS toggle",
          "type": "object",
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "security": {
                  "type": ["object", "null"],
                  "properties": {
                    "tls": {
                      "type": ["object", "null"],
                      "properties": {
                        "enabled": {
                          "description": "Enable or disable TLS for all applicable inter- and intra-service communication. Default behavior is true, and should only be set to false if required for demo configurations.",
                          "type": ["boolean", "null"],
                          "examples": [true, false]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "endpointTLSEnforced": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-113:v1/endpoint/tls/enforced",
          "$comment": "Common schema fragment for configuring TLS enforcement on an endpoint",
          "type": "object",
          "properties": {
            "tls": {
              "type": "object",
              "properties": {
                "enforced": {
                  "description": "Specify if the endpoint requires TLS or allows cleartext as well (only applies if TLS is enabled)",
                  "enum": ["required", "optional"],
                  "examples": ["required", "optional"]
                }
              },
              "required": ["enforced"]
            }
          },
          "required": ["tls"]
        },
        "endpointTLSVerifyClientCertificate": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-113:v1/endpoint/tls/verifyClientCertificate",
          "$comment": "Common schema fragment for configuring Mutual TLS client verification on an endpoint",
          "type": "object",
          "properties": {
            "tls": {
              "type": "object",
              "properties": {
                "verifyClientCertificate": {
                  "description": "Specify if the endpoint requires clients to provide a trusted client certificate (mTLS) or not (only applies if TLS is enabled)",
                  "enum": ["required", "optional"],
                  "examples": ["required", "optional"]
                }
              },
              "required": ["verifyClientCertificate"]
            }
          },
          "required": ["tls"]
        }
      }
    },
    "8f187db6-a75f-4054-8f89-ee6e7c1de6fb": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1123-114:v1",
      "title": "DR-D1123-114",
      "description": "Interface certificate configuration for application-external communication",
      "$comment": "*.[*.]certificates.trustedCertificateListName",
      "type": "object",
      "properties": {
        "certificates": {
          "type": "object",
          "properties": {
            "asymmetricKeyCertificateName": {
              "description": "Name of the private key in ADP Certificate Manager that will be used to authenticate to external services (mTLS)",
              "type": ["string", "null"],
              "examples": ["iam-authentication-ldap-client"]
            },
            "trustedCertificateListName": {
              "description": "Name of the list of certificates in ADP Certificate Manager that will be used to trust external services",
              "type": ["string", "null"],
              "examples": ["iam-authentication-ldap-client"]
            }
          },
          "if": {
            "$comment": "If a TLS client key is set, ensure a trusted certificate list is also set. It makes no sense to enable mTLS without any trusted certs.",
            "properties": {
              "asymmetricKeyCertificateName": {"type": "string"}
            }
          },
          "then": {
            "properties": {
              "trustedCertificateListName": {
                "not": {"type": "null"}
              }
            },
            "required": ["trustedCertificateListName"]
          }
        }
      },
      "required": ["certificates"]
    },
    "3d7a37d4-acb9-49d7-843f-003141b32921": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1123-115:v1",
      "title": "DR-D1123-115",
      "description": "Application and service level image registry credentials",
      "$comment": "imageCredentials.pullSecret",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "pullSecret": {
              "description": "Name of the kubernetes secret containing any required image registry credentials",
              "$comment": "k8sCheckedValue: global.pullSecret",
              "examples": ["docker-registry-credentials-secret"]
            }
          }
        },
        "imageCredentials": {
          "type": "object",
          "properties": {
            "pullSecret": {
              "description": "Name of the kubernetes secret containing any required image registry credentials; overrides global pull secret.",
              "$comment": "k8sCheckedValue: imageCredentials.pullSecret",
              "examples": ["docker-registry-credentials-secret"]
            }
          }
        }
      },
      "required": ["imageCredentials"]
    },
    "e7091a91-bebe-4395-9e8f-009e378e528d": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1123-123:v1",
      "title": "DR-D1123-123",
      "deprecated": true,
      "description": "Configure broad unix group ownership for application persistent data. Needed to handle cases where security context supplementalGroups is blocked by security policy or is insufficient.",
      "$comment": "global.fsGroup.namespace",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "fsGroup": {
              "type": ["object", "null"],
              "properties": {
                "manual": {
                  "description": "Directly configure group id to use for persistent data ownership; overrides namespace value, if set",
                  "$comment": "k8sCheckedValue: global.fsGroup.manual",
                  "examples": [10000]
                },
                "namespace": {
                  "description": "Use the default fsGroup for the namespace as defined by the cluster admin",
                  "type": ["boolean", "null"],
                  "examples": [true]
                }
              }
            }
          }
        }
      }
    },
    "356ce94a-4395-4ad3-b347-3bce7bba5532": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1123-124:v1",
      "title": "DR-D1123-124",
      "deprecated": true,
      "description": "Controls creation and mapping of role bindings",
      "$comment": "global.security.policyReferenceMap",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "security": {
              "type": ["object", "null"],
              "properties": {
                "policyBinding": {
                  "type": ["object", "null"],
                  "properties": {
                    "create": {
                      "type": ["boolean", "null"],
                      "description": "Automatically create role bindings for each service corresponding to the cluster role associated with security policy assigned to the service",
                      "examples": [true]
                    }
                  }
                },
                "policyReferenceMap": {
                  "description": "Map internal security policies to the policies used by the customer",
                  "type": ["object", "null"],
                  "additionalProperties": {
                    "description": "Key-value pair mapping an internal security policy to a customer-defined security policy. Requires the customer's security policy and its associated cluster role have the same name.",
                    "$comment": "The example helm function handles null values, so the schema will support them as a way of cancelling a mapping",
                    "type": ["string", "null"],
                    "examples": ["customer-z-default"]
                  },
                  "examples": [
                    {
                      "default-restricted-security-policy": "customer-z-restricted",
                      "plc-5c43d80b0987ea36dfa3d5967adc18": "customer-z-network"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "ed006e7e-8107-4e49-91c0-0ef9477e47e1": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1123-127:v1",
      "title": "DR-D1123-127",
      "description": "AppArmor configuration",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "appArmorProfile-service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-127:v1/service-level",
          "$comment": "Common schema variant for configuring appArmorProfiles at the service level",
          "type": "object",
          "properties": {
            "appArmorProfile": {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-127:v1/appArmorProfile"}
          },
          "required": ["appArmorProfile"]
        },
        "appArmorProfile": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-127:v1/appArmorProfile",
          "$comment": "Common schema fragment for configuring container appArmorProfiles",
          "type": "object",
          "properties": {
            "type": {
              "description": "Configure the AppArmor profile choice",
              "enum": [
                "unconfined",
                "runtime/default",
                "localhost",
                ""
              ],
              "examples": ["unconfined"]
            },
            "localhostProfile": {
              "description": "Path to the AppArmor profile to use when loading from localhost",
              "type": ["string", "null"],
              "examples": ["profiles/apparmorprofile.json"]
            }
          },
          "required": ["type"],
          "if": {
            "properties": {
              "type": {"const": "localhost"}
            },
            "required": ["type"]
          },
          "then": {
            "properties": {
              "localhostProfile": {
                "not": {"type": "null"}
              }
            },
            "required": ["localhostProfile"]
          }
        },
        "verifyAllOrNoContainersSet": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-127:v1/verifyAllOrNoContainersSet",
          "$comment": "Verify that either all or no containers are assigned profiles",
          "if": {
            "properties": {
              "appArmorProfile": {
                "properties": {
                  "type": {"const": ""}
                },
                "required": ["type"]
              }
            },
            "required": ["appArmorProfile"]
          },
          "then": {
            "if": {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-127:v1/verifyAllContainersSet"},
            "then": true,
            "else": {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-127:v1/verifyNoContainerSet"}
          }
        },
        "verifyAllContainersSet": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-127:v1/verifyAllContainersSet",
          "$comment": "Check that all containers have explicitly configured a value for 'type'",
          "properties": {
            "appArmorProfile": {
              "type": ["object"],
              "patternProperties": {
                "^.*$": {
                  "properties": {
                    "type": {
                      "enum": [
                        "unconfined",
                        "runtime/default",
                        "localhost"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "verifyNoContainerSet": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-127:v1/verifyNoContainerSet",
          "$comment": "Check that all containers have empty string as value for 'type'",
          "properties": {
            "appArmorProfile": {
              "type": ["object"],
              "patternProperties": {
                "^.*$": {
                  "properties": {
                    "type": {"const": ""}
                  }
                }
              }
            }
          }
        }
      }
    },
    "0b549f8f-d560-40cb-93cb-a911f54af83d": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1123-128:v1",
      "title": "DR-D1123-128",
      "description": "Seccomp configuration",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "seccompProfile-service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-128:v1/service-level",
          "$comment": "Common schema variant for configuring seccompProfiles at the service level",
          "type": "object",
          "properties": {
            "seccompProfile": {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-128:v1/seccompProfile"}
          },
          "required": ["seccompProfile"]
        },
        "seccompProfile": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-128:v1/seccompProfile",
          "$comment": "Common schema fragment for configuring container seccompProfiles",
          "type": "object",
          "properties": {
            "type": {
              "description": "Configure the seccomp profile choice",
              "$comment": "k8sCheckedValue: seccompProfile[.*].type",
              "examples": [
                "Unconfined",
                "RuntimeDefault",
                "Localhost",
                ""
              ]
            },
            "localhostProfile": {
              "description": "Path to the seccomp profile to use when loading from localhost",
              "$comment": "k8sCheckedValue: seccompProfile[.*].localhostProfile",
              "examples": ["profiles/seccompprofile.json"]
            }
          },
          "required": ["type"],
          "if": {
            "properties": {
              "type": {"const": "Localhost"}
            },
            "required": ["type"]
          },
          "then": {
            "properties": {
              "localhostProfile": {
                "not": {"type": "null"}
              }
            },
            "required": ["localhostProfile"]
          }
        },
        "verifyAllOrNoContainersSet": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-128:v1/verifyAllOrNoContainersSet",
          "$comment": "Verify that either all or no containers are assigned profiles",
          "if": {
            "properties": {
              "seccompProfile": {
                "properties": {
                  "type": {"const": ""}
                },
                "required": ["type"]
              }
            },
            "required": ["seccompProfile"]
          },
          "then": {
            "if": {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-128:v1/verifyAllContainersSet"},
            "then": true,
            "else": {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-128:v1/verifyNoContainerSet"}
          }
        },
        "verifyAllContainersSet": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-128:v1/verifyAllContainersSet",
          "$comment": "Check that all containers have explicitly configured a value for 'type'",
          "properties": {
            "seccompProfile": {
              "type": ["object"],
              "patternProperties": {
                "^.*$": {
                  "properties": {
                    "type": {
                      "not": {"const": ""}
                    }
                  }
                }
              }
            }
          }
        },
        "verifyNoContainerSet": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-128:v1/verifyNoContainerSet",
          "$comment": "Check that all containers have empty string as value for 'type'",
          "properties": {
            "seccompProfile": {
              "type": ["object"],
              "patternProperties": {
                "^.*$": {
                  "properties": {
                    "type": {"const": ""}
                  }
                }
              }
            }
          }
        }
      }
    },
    "01fb1f59-ba1d-4068-9dbb-c3fb2826038d": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1123-133:v1",
      "title": "DR-D1123-133",
      "description": "Standardized secrets for certificates",
      "$comment": "global.security.tls.trustedInternalRootCa.secret",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "security": {
              "type": ["object", "null"],
              "properties": {
                "tls": {
                  "type": ["object", "null"],
                  "properties": {
                    "trustedInternalRootCa": {
                      "type": ["object", "null"],
                      "properties": {
                        "secret": {
                          "description": "The secret holding the public certificate bundle of the root CA that issues application-internal server certificates and optionally the infrastructure root CA certificates that the application trusts.",
                          "type": ["string", "null"],
                          "examples": ["eric-sec-sip-tls-trusted-root-cert"]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "6e2d5a19-16a4-4709-a195-7005555ac6c6": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1123-134:v1",
      "title": "DR-D1123-134",
      "description": "Configures role binding for namespace or cluster scoped security policy roles.",
      "$comment": "global.securityPolicy.rolekind, securityPolicy.rolename",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "securityPolicy": {
              "type": ["object", "null"],
              "properties": {
                "rolekind": {
                  "enum": ["ClusterRole", "Role", ""],
                  "description": "Sets the rolebinding kind to namespaced, or clusterscoped",
                  "examples": ["ClusterRole", "Role", ""]
                }
              }
            }
          }
        },
        "securityPolicy": {
          "type": ["object", "null"],
          "properties": {
            "rolename": {
              "type": "string",
              "minLength": 1,
              "description": "Sets the role name to the role binding.",
              "$comment": "k8sCheckedValue: securityPolicy.rolename",
              "examples": ["restricted"]
            }
          }
        }
      }
    },
    "229f4fed-5b2d-4f4d-9245-f7f083ec5741": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1123-135:v1",
      "title": "DR-D1123-135",
      "description": "Configuration of supplementalGroups IDs.",
      "$comment": "podSecurityContext.supplementalGroups",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "podSecurityContext": {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-135:v1/podSecurityContext"}
          }
        },
        "podSecurityContext": {"$ref": "urn:adp:helm:schemas:v1:DR-D1123-135:v1/podSecurityContext"}
      },
      "$defs": {
        "podSecurityContext": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1123-135:v1/podSecurityContext",
          "$comment": "This schema is not meant to be used directly by services",
          "type": ["object", "null"],
          "properties": {
            "supplementalGroups": {
              "type": ["array", "null"],
              "description": "A list of supplemental groups.",
              "items": {
                "type": "integer",
                "minimum": 0
              },
              "examples": [
                [1000, 2000, 3000]
              ]
            }
          }
        }
      }
    },
    "68cac229-838d-4cb2-9d70-062a8ab50f11": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1123-136:v1",
      "title": "DR-D1123-136",
      "description": "Configure broad unix group ownership for application persistent data. Needed to handle cases where security context supplementalGroups is blocked by security policy or is insufficient.",
      "$comment": "global.fsGroup.namespace",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "fsGroup": {
              "type": ["object", "null"],
              "properties": {
                "manual": {
                  "description": "Directly configure group id to use for persistent data ownership; overrides namespace value, if set",
                  "$comment": "k8sCheckedValue: global.fsGroup.manual",
                  "examples": [10000]
                },
                "namespace": {
                  "description": "Use the default fsGroup for the namespace as defined by the cluster admin",
                  "type": ["boolean", "null"],
                  "examples": [true]
                }
              }
            }
          }
        }
      }
    },
    "c5197d7f-fe83-4628-9281-2e8ded4a475a": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1123-137:v1",
      "title": "DR-D1123-137",
      "description": "Support of certificate revocation status check for external certificates",
      "$comment": "*.[*.]certificates.crlEnabled",
      "type": "object",
      "properties": {
        "certificates": {
          "type": "object",
          "properties": {
            "crlEnabled": {
              "description": "Indicates that CRL is enabled or disabled for the interface",
              "type": "boolean",
              "examples": [true, false]
            }
          },
          "required": ["crlEnabled"]
        }
      },
      "required": ["certificates"]
    },
    "96dc61f5-f8a0-4e24-8682-5160e5b40d47": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-004-AD:v1",
      "title": "DR-D1125-004-AD",
      "description": "Service VIP Address management",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "singleService": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-004-AD:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single service",
          "type": "object",
          "properties": {
            "service": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-004-AD:v1/service"}
          },
          "required": ["service"]
        },
        "service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-004-AD:v1/service",
          "$comment": "Common schema for the loadBalancerIP portion of an individual service",
          "type": "object",
          "properties": {
            "loadBalancerIP": {"$ref": "urn:adp:helm:schemas:v1:service-networking-common:v1/loadBalancerIP"}
          }
        }
      }
    },
    "f2c2718d-86ce-4633-ae43-16cb85c484cc": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-006-AD:v1",
      "title": "DR-D1125-006-AD",
      "description": "Service shared VIP label",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "singleService": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-006-AD:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single service",
          "type": "object",
          "properties": {
            "service": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-006-AD:v1/service"}
          },
          "required": ["service"]
        },
        "service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-006-AD:v1/service",
          "$comment": "Common schema for the sharedVIPLabel annotation portion of an individual service",
          "type": "object",
          "properties": {
            "annotations": {
              "type": "object",
              "properties": {
                "sharedVIPLabel": {"$ref": "urn:adp:helm:schemas:v1:service-networking-common:v1/sharedVIPLabel"}
              }
            }
          },
          "required": ["annotations"]
        }
      }
    },
    "fe11e873-a0d3-4879-979e-78dfba21762b": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-007-AD:v1",
      "title": "DR-D1125-007-AD",
      "description": "Service shared VIP address pool",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "singleService": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-007-AD:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single service",
          "type": "object",
          "properties": {
            "service": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-007-AD:v1/service"}
          },
          "required": ["service"]
        },
        "service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-007-AD:v1/service",
          "$comment": "Common schema for the vip addressPoolName annotation portion of an individual service",
          "type": "object",
          "properties": {
            "annotations": {
              "type": "object",
              "properties": {
                "addressPoolName": {"$ref": "urn:adp:helm:schemas:v1:service-networking-common:v1/addressPoolName"}
              }
            }
          },
          "required": ["annotations"]
        }
      }
    },
    "2344eb95-e987-4abb-a342-6232607695d7": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-011-AD:v1",
      "title": "DR-D1125-011-AD",
      "description": "Ingress toggle",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "singleIngress": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-011-AD:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single ingress",
          "type": "object",
          "properties": {
            "ingress": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-011-AD:v1/ingress"}
          },
          "required": ["ingress"]
        },
        "ingress": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-011-AD:v1/ingress",
          "$comment": "Common schema for the enabled portion of an individual ingress",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Toggle for the service ingress rule",
              "type": "boolean",
              "examples": [true]
            }
          },
          "required": ["enabled"]
        }
      }
    },
    "7e66ec1e-13e9-4ebf-8c4a-6e96bc0f1faa": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-013-AD:v1",
      "title": "DR-D1125-013-AD",
      "description": "Ingress class",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "singleIngress": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-013-AD:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single ingress",
          "type": "object",
          "properties": {
            "ingress": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-013-AD:v1/ingress"}
          },
          "required": ["ingress"]
        },
        "ingress": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-013-AD:v1/ingress",
          "$comment": "Common schema for the ingressClass portion of an individual ingress",
          "type": "object",
          "properties": {
            "ingressClass": {
              "description": "Set the ingress class name",
              "type": "string",
              "examples": ["OAM-IngressClass"]
            }
          },
          "required": ["ingressClass"]
        }
      }
    },
    "27a7771c-3067-4ecc-aae5-fa353f3330cb": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-014-AD:v1",
      "title": "DR-D1125-014-AD",
      "description": "Ingress TLS options",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "singleIngress": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-014-AD:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single ingress",
          "type": "object",
          "properties": {
            "ingress": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-014-AD:v1/ingress"}
          },
          "required": ["ingress"]
        },
        "ingress": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-014-AD:v1/ingress",
          "$comment": "Common schema for the hostname and tls.passthrough portions of an individual ingress",
          "type": "object",
          "properties": {
            "hostname": {
              "description": "Set the host name of the service",
              "$comment": "k8sCheckedValue: ingress[.*].hostname",
              "examples": ["foo.bar.com"]
            },
            "tls": {
              "type": ["object", "null"],
              "properties": {
                "passthrough": {
                  "type": "boolean",
                  "description": "Passthrough the traffic without terminating TLS at Ingress controller",
                  "examples": [true]
                }
              }
            }
          },
          "required": ["hostname"]
        }
      }
    },
    "57012af6-43af-4980-82de-9f9f1f67cbcf": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-018-AD:v1",
      "title": "DR-D1125-018-AD",
      "deprecated": true,
      "description": "Internal IP Family",
      "$comment": "global.internalIPFamily",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "internalIPFamily": {
              "description": "IP family used for ClusterIP services",
              "$comment": "k8sCheckedValue: global.internalIPFamily",
              "examples": ["IPv4", "IPv6"]
            }
          }
        }
      }
    },
    "73d8ff3a-7f61-46bd-b2ce-c0f522cb479a": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-019-AD:v1",
      "title": "DR-D1125-019-AD",
      "deprecated": true,
      "description": "External IP Family Toggle",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "global": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-019-AD:v1/global",
          "$comment": "Common schema for ip family toggle global parameters",
          "type": "object",
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "externalIPv4": {
                  "type": ["object", "null"],
                  "properties": {
                    "enabled": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-019-AD:v1/family-enabled"}
                  }
                },
                "externalIPv6": {
                  "type": ["object", "null"],
                  "properties": {
                    "enabled": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-019-AD:v1/family-enabled"}
                  }
                }
              }
            }
          }
        },
        "singleService": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-019-AD:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single service",
          "type": "object",
          "properties": {
            "service": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-019-AD:v1/service"}
          },
          "required": ["service"]
        },
        "service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-019-AD:v1/service",
          "$comment": "Common schema for the ip family toggle portion of an individual service",
          "type": "object",
          "properties": {
            "externalIPv4": {
              "type": "object",
              "properties": {
                "enabled": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-019-AD:v1/family-enabled"}
              }
            },
            "externalIPv6": {
              "type": "object",
              "properties": {
                "enabled": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-019-AD:v1/family-enabled"}
              }
            }
          },
          "required": ["externalIPv4", "externalIPv6"]
        },
        "family-enabled": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-019-AD:v1/family-enabled",
          "$comment": "Reusable definition of the ip family toggle",
          "type": ["boolean", "null"],
          "description": "Toggle creation of service manifest for the given IP family",
          "examples": [true, false, null]
        }
      }
    },
    "c9cc8678-1633-4496-88c4-feeea456d2c9": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-020-AD:v1",
      "title": "DR-D1125-020-AD",
      "deprecated": true,
      "description": "Load balancer IP and IP pool",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "singleService": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-020-AD:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single service",
          "type": "object",
          "properties": {
            "service": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-020-AD:v1/service"}
          },
          "required": ["service"]
        },
        "service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-020-AD:v1/service",
          "$comment": "Common schema for the ip family load balancer IP and annotations portion of an individual service",
          "type": "object",
          "properties": {
            "externalIPv4": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-020-AD:v1/loadBalancerParams"},
            "externalIPv6": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-020-AD:v1/loadBalancerParams"}
          },
          "required": ["externalIPv4", "externalIPv6"]
        },
        "loadBalancerParams": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-020-AD:v1/loadBalancerParams",
          "type": "object",
          "properties": {
            "loadBalancerIP": {"$ref": "urn:adp:helm:schemas:v1:service-networking-common:v1/loadBalancerIP"},
            "annotations": {
              "type": "object",
              "properties": {
                "sharedVIPLabel": {"$ref": "urn:adp:helm:schemas:v1:service-networking-common:v1/sharedVIPLabel"},
                "addressPoolName": {"$ref": "urn:adp:helm:schemas:v1:service-networking-common:v1/addressPoolName"}
              }
            }
          },
          "required": ["annotations"]
        }
      }
    },
    "9018858f-3efc-49d5-8513-afdf7afc0ef9": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-022-AD:v1",
      "title": "DR-D1125-022-AD",
      "description": "Service cloud load balancer annotations",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "singleService": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-022-AD:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single service",
          "type": "object",
          "properties": {
            "service": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-022-AD:v1/service"}
          },
          "required": ["service"]
        },
        "service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-022-AD:v1/service",
          "$comment": "Common schema for the cloudProviderLB annotations portion of an individual service",
          "type": "object",
          "properties": {
            "annotations": {
              "type": "object",
              "properties": {
                "cloudProviderLB": {
                  "type": ["object", "null"],
                  "description": "Service annotations to support external connectivity mechanisms and non-ECFE solutions",
                  "additionalProperties": {"type": "string"},
                  "examples": [
                    {
                      "service.beta.kubernetes.io/aws-load-balancer-type": "nlb",
                      "service.beta.kubernetes.io/aws-load-balancer-proxy-protocol": "*"
                    }
                  ]
                }
              }
            }
          },
          "required": ["annotations"]
        }
      }
    },
    "463c429a-c10e-49d4-8b9e-13c8f35a2589": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-025:v1",
      "title": "DR-D1125-025",
      "description": "Define annotations to specify load balancer IP's in Kubernetes single and dual stack",
      "$comment": "service[.*].annotations.loadBalancerIPs",
      "allOf": [false],
      "$defs": {
        "singleService": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-025:v1/service-level",
          "$comment": "Common schema variant for a single pod service that defines address type at service level",
          "properties": {
            "service": {
              "type": "object",
              "$ref": "urn:adp:helm:schemas:v1:DR-D1125-025:v1/service"
            }
          },
          "required": ["service"]
        },
        "service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-025:v1/service",
          "type": "object",
          "if": {
            "properties": {
              "type": {"const": "LoadBalancer"}
            }
          },
          "then": {
            "properties": {
              "annotations": {
                "type": "object",
                "$ref": "urn:adp:helm:schemas:v1:DR-D1125-025:v1/loadBalancerIPs"
              }
            },
            "required": ["annotations"]
          }
        },
        "loadBalancerIPs": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-025:v1/loadBalancerIPs",
          "$comment": "if empty: IP address assigned dynamically from an address pool",
          "type": "object",
          "properties": {
            "loadBalancerIPs": {
              "type": "string",
              "examples": "192.168.10.150,3002:0bd6:0000:0000:0000:ee00:0033:6778"
            }
          },
          "required": ["loadBalancerIPs"]
        }
      }
    },
    "e30b4a3a-7c47-437a-be79-1a8b85196b34": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-029:v1",
      "title": "DR-D1125-029",
      "description": "IP address family and Kubernetes Service behavior in dual stack for internal service exposure within Kubernetes cluster",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "internalIPFamily": {
              "description": "Value to specify the IP families from which a Kubernetes Service is assigned an IP address",
              "enum": ["IPv4", "IPv6", "", null],
              "examples": ["IPv4"]
            }
          }
        }
      }
    },
    "09ae6f35-5301-4bde-952a-d0f1fab8339c": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-032:v1",
      "title": "DR-D1125-032",
      "description": "Kubernetes Service behavior in dual stack for external service exposure.",
      "type": "object",
      "allOf": [false],
      "defs": {
        "global": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-032:v1/global",
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "externalIPFamilyPolicy": {
                  "enum": ["SingleStack", "PreferDualStack"],
                  "examples": ["SingleStack", "PreferDualStack"]
                }
              }
            }
          }
        },
        "service-level": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-032:v1/service-level",
          "properties": {
            "service": {
              "type": ["object", "null"],
              "properties": {
                "externalIPFamilyPolicy": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-032:v1/externalIPFamilyPolicy"}
              }
            }
          }
        },
        "externalIPFamilyPolicy": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-032:v1/externalIPFamilyPolicy",
          "description": "value to specify the behavior of Kubernetes Service (Single-stack or as as Dual-stack service) and which IP address (IPv4 and/or IPv6 addresses) are allocated to it",
          "enum": ["SingleStack", "PreferDualStack", null],
          "examples": ["SingleStack", "PreferDualStack"]
        }
      }
    },
    "38695855-ed84-423f-b557-7d1c73e38f25": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-033:v1",
      "title": "DR-D1125-033",
      "description": "IP address family for external service exposure outside of Kubernetes cluster",
      "type": "object",
      "allOf": [false],
      "defs": {
        "global": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-033:v1/global",
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "externalIPFamily": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-033:v1/externalIPFamily"}
              }
            }
          }
        },
        "service-level": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-033:v1/service-level",
          "properties": {
            "service": {
              "type": ["object", "null"],
              "properties": {
                "externalIPFamily": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-033:v1/externalIPFamily"}
              }
            }
          }
        },
        "externalIPFamilyPolicy": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-033:v1/externalIPFamily",
          "description": "Value to specify the address families (IPv4 and/or IPv6 addresses) from which a Kubernetes Service is assigned an IP address",
          "enum": ["IPv4", "IPv6", null],
          "examples": ["IPv4"]
        }
      }
    },
    "1398a2bb-05d7-4f05-858b-db24a7bd2c66": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-040-AD:v1",
      "title": "DR-D1125-040-AD",
      "description": "Traffic shaping",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "singleWorkload": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-040-AD:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single workload",
          "type": "object",
          "properties": {
            "bandwidth": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-040-AD:v1/bandwidth"}
          },
          "required": ["bandwidth"]
        },
        "bandwidth": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-040-AD:v1/bandwidth",
          "$comment": "Common schema for the maxEgressRate portion of an individual workload",
          "type": "object",
          "properties": {
            "maxEgressRate": {
              "type": ["string", "null"],
              "pattern": "^([1-9][0-9]*M)?$",
              "description": "Configures workload bandwidth limits (MB/s) when supported by the cluster",
              "examples": ["30M", "200M", "", null]
            }
          }
        }
      }
    },
    "17e86f43-cadd-4854-b3bf-e7ebd0ca810b": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-059:v1",
      "title": "DR-D1125-059",
      "description": "Network Policy",
      "$comment": "networkPolicy.enabled",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "networkPolicy": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-059:v1/networkPolicy"}
          }
        },
        "networkPolicy": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-059:v1/networkPolicy"}
      },
      "$defs": {
        "networkPolicy": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-059:v1/networkPolicy",
          "$comment": "Reusable networkPolicy definition",
          "type": ["object", "null"],
          "properties": {
            "enabled": {
              "description": "Option to enable or disable network policy",
              "type": ["boolean", "null"],
              "examples": [true, false]
            }
          }
        }
      }
    },
    "4076e5bb-5cf6-420d-aabb-79d82e57cf5a": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-100:v1",
      "title": "DR-D1125-100",
      "description": "External-facing k8s service type configuration",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "singleService": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-100:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single service",
          "type": "object",
          "properties": {
            "service": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-100:v1/service"}
          },
          "required": ["service"]
        },
        "service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-100:v1/service",
          "$comment": "Common schema for the service type portion of an individual service",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type to be used for the externally available k8s service",
              "$comment": "Limited subset of the values allowed by k8s",
              "enum": ["LoadBalancer", "ClusterIP"],
              "examples": ["LoadBalancer", "ClusterIP"]
            }
          },
          "required": ["type"]
        }
      }
    },
    "bccfe13c-6922-4ee7-8fbb-4be5f48d22f8": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-102:v1",
      "title": "DR-D1125-102",
      "description": "Disabling NodePort allocation for external service exposure outside of k8s cluster",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "singleService": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-102:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single service",
          "type": "object",
          "properties": {
            "service": {"$ref": "urn:adp:helm:schemas:v1:DR-D1125-102:v1/service"}
          },
          "required": ["service"]
        },
        "service": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-102:v1/service",
          "$comment": "Common schema for the allocateLoadBalancerNodePorts portion of an individual service",
          "type": "object",
          "properties": {
            "allocateLoadBalancerNodePorts": {
              "description": "Specify if node ports are allocated when the service is exposed externally",
              "$comment": "k8sCheckedValue: service[.*].allocateLoadBalancerNodePorts",
              "not": {"type": "null"},
              "examples": [true, false]
            }
          },
          "required": ["allocateLoadBalancerNodePorts"]
        }
      }
    },
    "718f046b-8747-44c6-b6d1-813b58a1ea02": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-103:v1",
      "title": "DR-D1125-103",
      "description": "Configuration controlling on which controller/protocol/endpoint the secondary networking will be enabled",
      "$comment": "secondaryNetwork.[*]",
      "allOf": [false],
      "$defs": {
        "single-secondaryNetwork": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-103:v1/single-secondaryNetwork",
          "properties": {
            "secondaryNetwork": {
              "$comment": "Note that we do not specify type object here, as the referenced rule will anyway fail if it is not",
              "$ref": "urn:adp:helm:schemas:v1:DR-D1125-103:v1/secondaryNetwork"
            }
          }
        },
        "secondaryNetwork": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1125-103:v1/secondaryNetwork",
          "type": ["object", "null"],
          "properties": {
            "enabled": {
              "description": "Option to enable or disable the use of secondary network.",
              "type": "boolean"
            }
          },
          "required": ["enabled"]
        }
      }
    },
    "12509422-2e31-4eea-82f7-564d8a6e1aef": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1125-110:v1",
      "title": "DR-D1125-110",
      "description": "DSCP marking on port level",
      "$comment": "service.*.dscp",
      "type": ["object", "null"],
      "properties": {
        "dscp": {
          "description": "Configure DSCP classification",
          "type": ["integer", "null"],
          "minimum": 0,
          "maximum": 63,
          "examples": [1]
        }
      }
    },
    "36e8a166-ad25-4dab-b74b-6507d7cda911": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1126-005:v1",
      "title": "DR-D1126-005",
      "description": "Pod definitions SHALL specify resource requests and limits for all listed containers",
      "$comment": "resources.*.limits.ephemeral-storage",
      "type": "object",
      "properties": {
        "requests": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1/podResource"},
        "limits": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-005:v1/podResource"}
      },
      "required": ["requests", "limits"],
      "$defs": {
        "podResource": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1126-005:v1/podResource",
          "description": "Pod resource request and limit parameters",
          "type": "object",
          "properties": {
            "memory": {
              "description": "The memory request or limit",
              "$comment": "k8sCheckedValue: resources.*.limits.memory",
              "examples": ["64Mi", 128974848]
            },
            "cpu": {
              "description": "The cpu request or limit",
              "$comment": "k8sCheckedValue: resources.*.limits.cpu",
              "examples": ["250m", 0.5]
            },
            "ephemeral-storage": {
              "description": "The ephemeral storage reqeust or limit",
              "$comment": "k8sCheckedValue: resources.*.limits.ephemeral-storage",
              "examples": ["2Gi", 128974848]
            }
          }
        }
      }
    },
    "0a0002fe-e526-4470-9c54-2198d379e2fb": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1126-010:v1",
      "title": "DR-D1126-010",
      "deprecated": true,
      "description": "ADP Service based on Java implementation SHALL define heap size percentage in relation to the container Limit",
      "$comment": "resources.*.jvm.largeMemoryAllocationMaxPercentage",
      "type": "object",
      "properties": {
        "limits": {
          "$comment": "Further constrains the resource limits defined in DR-D1126-005 to require that memory limits are set",
          "type": "object",
          "properties": {
            "memory": {
              "not": {"type": "null"}
            }
          },
          "required": ["memory"]
        },
        "jvm": {
          "description": "Java virtual machine",
          "type": "object",
          "properties": {
            "initialMemoryAllocationPercentage": {
              "description": "The initial amount of memory percentage that the JVM heap can use in relation to the container memory limit",
              "type": "string",
              "pattern": "^([1-9][0-9]?|100)%$",
              "examples": ["50%"]
            },
            "smallMemoryAllocationMaxPercentage": {
              "description": "The maximum amount of memory percentage that the JVM heap can use in relation to the container memory limit (when the container memory limit < 1.3 Gi)",
              "type": "string",
              "pattern": "^([1-9][0-9]?|100)%$",
              "examples": ["70%"]
            },
            "largeMemoryAllocationMaxPercentage": {
              "description": "The maximum amount of memory percentage that the JVM heap can use in relation to the container memory limit (when the container memory limit > 1.3 Gi)",
              "type": "string",
              "pattern": "^([1-9][0-9]?|100)%$",
              "examples": ["50%"]
            }
          },
          "required": [
            "initialMemoryAllocationPercentage",
            "smallMemoryAllocationMaxPercentage",
            "largeMemoryAllocationMaxPercentage"
          ]
        }
      },
      "required": ["limits", "jvm"]
    },
    "77e829b7-50cd-4735-9273-81108970c09c": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1126-011:v1",
      "title": "DR-D1126-011",
      "description": "ADP Service based on Java implementation SHALL define heap size percentage in relation to the container Limit",
      "$comment": "resources.*.jvm.largeMemoryAllocationMaxPercentage",
      "type": "object",
      "properties": {
        "limits": {
          "$comment": "Further constrains the resource limits defined in DR-D1126-005 to require that memory limits are set",
          "type": "object",
          "properties": {
            "memory": {
              "not": {"type": "null"}
            }
          },
          "required": ["memory"]
        },
        "jvm": {
          "description": "Java virtual machine",
          "type": "object",
          "properties": {
            "initialMemoryAllocationPercentage": {
              "description": "The initial amount of memory percentage that the JVM heap can use in relation to the container memory limit",
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "examples": [50]
            },
            "smallMemoryAllocationMaxPercentage": {
              "description": "The maximum amount of memory percentage that the JVM heap can use in relation to the container memory limit (when the container memory limit < 1.3 Gi)",
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "examples": [70]
            },
            "largeMemoryAllocationMaxPercentage": {
              "description": "The maximum amount of memory percentage that the JVM heap can use in relation to the container memory limit (when the container memory limit > 1.3 Gi)",
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "examples": [50]
            }
          },
          "required": [
            "initialMemoryAllocationPercentage",
            "smallMemoryAllocationMaxPercentage",
            "largeMemoryAllocationMaxPercentage"
          ]
        }
      },
      "required": ["limits", "jvm"]
    },
    "86a0d8bf-8876-454c-8f19-1a635ad184d0": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1126-030:v1",
      "title": "DR-D1126-030",
      "description": "Configuration of priority class to allow assigning priorities to Pods",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "servicePodPriority": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/service-level",
          "$comment": "Common schema variant for a microservice with a single pod",
          "type": "object",
          "properties": {
            "podPriority": {"$ref": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority"}
          },
          "required": ["podPriority"]
        },
        "podPriority": {
          "$id": "urn:adp:helm:schemas:v1:DR-D1126-030:v1/podPriority",
          "$comment": "Common schema fragment for the priorityClassName portion of podPriority",
          "type": "object",
          "properties": {
            "priorityClassName": {
              "description": "Pod priorityClass name",
              "type": ["string", "null"],
              "examples": ["high-priority", ""]
            }
          }
        }
      }
    },
    "63e73171-ebd2-4dce-8307-571a78985417": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1126-050:v1",
      "title": "DR-D1126-050",
      "description": "Timezone configuration",
      "$comment": "global.timezone",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "timezone": {
              "description": "Timezone value following the IANA Timezone Database",
              "type": ["string", "null"],
              "examples": ["Europe/Kiev"]
            }
          }
        }
      }
    },
    "20d99477-3261-4d82-bf37-1cf0cb3c7298": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D1134-320:v1",
      "title": "DR-D1134-320",
      "description": "The flavor that represents the wanted resource requests and limits",
      "$comment": "predefined resource flavor names listed in the service user guide",
      "type": "object",
      "properties": {
        "customObject": {
          "type": ["object", "null"],
          "properties": {
            "resources": {
              "type": ["object", "null"],
              "properties": {
                "flavor": {
                  "description": "null or empty string not allowed",
                  "type": ["string"],
                  "minLength": 1
                }
              }
            }
          }
        }
      }
    },
    "f0638498-8823-4b25-9bfa-f40f9dd9505a": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D470204-055-A:v1",
      "title": "DR-D470204-055-A",
      "deprecated": true,
      "description": "Storage class name specification for persistent volume claim",
      "$comment": "[*.]persistentVolumeClaim.storageClassName",
      "type": "object",
      "properties": {
        "persistentVolumeClaim": {
          "type": ["object"],
          "properties": {
            "storageClassName": {
              "description": "Name of the storage class for the persistent volume claim",
              "$comment": "k8sCheckedValue: [*.]persistentVolumeClaim.storageClassName",
              "examples": ["network-block"]
            }
          }
        }
      },
      "required": ["persistentVolumeClaim"]
    },
    "40ef7443-96a1-40ba-85b9-5c0d3bb806bd": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D470204-057-A:v1",
      "title": "DR-D470204-057-A",
      "deprecated": true,
      "description": "Volume size request for persistent volume claim",
      "$comment": "[*.]persistentVolumeClaim.size",
      "type": "object",
      "properties": {
        "persistentVolumeClaim": {
          "type": ["object"],
          "properties": {
            "size": {
              "description": "Requested size of volume",
              "$comment": "k8sCheckedValue: [*.]persistentVolumeClaim.size",
              "examples": ["500Mi", "10Gi", 10000]
            }
          },
          "required": ["size"]
        }
      },
      "required": ["persistentVolumeClaim"]
    },
    "564dc87d-9d49-4cbc-bea2-9d35107b09cd": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D470218-003-AD:v2",
      "title": "DR-D470218-003-AD",
      "description": "Backup & Restore Agent",
      "$comment": "brAgent.enabled",
      "type": "object",
      "properties": {
        "brAgent": {
          "type": ["object", "null"],
          "properties": {
            "enabled": {
              "description": "Option to enable or disable backup & restore agent",
              "type": "boolean",
              "examples": [true, false]
            }
          }
        }
      },
      "$defs": {
        "v1": {
          "$schema": "http://json-schema.org/draft-07/schema",
          "$id": "urn:adp:helm:schemas:v1:DR-D470218-003-AD:v1",
          "title": "DR-D470218-003-AD",
          "deprecated": true,
          "description": "Backup & Restore Agent",
          "$comment": "brAgent.enabled",
          "type": "object",
          "properties": {
            "brAgent": {
              "type": ["object", "null"],
              "properties": {
                "enabled": {
                  "description": "Option to enable or disable backup & restore agent",
                  "type": ["boolean", "null"],
                  "examples": [true, false]
                }
              }
            }
          }
        }
      }
    },
    "5d0969f6-a036-44d5-bdbd-5f3b2d1dad42": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D470218-006-AD:v1",
      "title": "DR-D470218-006-AD",
      "description": "Backup & Restore Agent Backup Types",
      "$comment": "brAgent.backupTypeList",
      "type": "object",
      "properties": {
        "brAgent": {
          "type": ["object", "null"],
          "properties": {
            "backupTypeList": {
              "description": "The list of backup types the backup & restore agent shall participate in",
              "type": ["array", "null"],
              "items": {"type": "string"},
              "examples": [
                ["configuration", "subscriberProfiles"]
              ]
            }
          }
        }
      }
    },
    "9ba46efa-e794-44f8-bde1-1030a3d6d6d3": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D470222-010:v1",
      "title": "DR-D470222-010",
      "deprecated": true,
      "description": "Configuration of Log Collection Streaming Method",
      "$comment": "log.streamingMethod",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "log": {
              "type": "object",
              "properties": {
                "streamingMethod": {
                  "description": "Indicate which streaming method has to be chosen by all services to write log records",
                  "enum": ["indirect", "direct", "dual", null],
                  "examples": ["indirect", "direct", "dual"]
                }
              }
            }
          }
        },
        "log": {
          "type": "object",
          "properties": {
            "streamingMethod": {
              "description": "Sets streaming method that the service shall use to write log records. Overrides the global streamingMethod.",
              "enum": ["indirect", "direct", "dual", null],
              "examples": ["indirect", "direct", "dual"]
            }
          }
        }
      }
    },
    "f30f185b-7a30-4adf-94cd-b5afce342691": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:DR-D470222-030:v1",
      "title": "DR-D470222-030",
      "description": "Configuration of Log Collection Streaming Method",
      "$comment": "log.streamingMethod",
      "type": "object",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "log": {
              "type": "object",
              "properties": {
                "streamingMethod": {
                  "description": "Indicate which streaming method has to be chosen by all services to write log records",
                  "enum": ["indirect", "direct", "dual", null],
                  "examples": ["indirect", "direct", "dual"]
                }
              }
            }
          }
        },
        "log": {
          "type": "object",
          "properties": {
            "streamingMethod": {
              "description": "Sets streaming method that the service shall use to write log records. Overrides the global streamingMethod.",
              "enum": ["indirect", "direct", "dual", null],
              "examples": ["indirect", "direct", "dual"]
            }
          }
        }
      }
    },
    "65e36a8f-9e69-4f01-a76b-c7aad724092f": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:backup-and-restore:v1",
      "title": "Backup and Restore",
      "description": "Global backup and restore parameters",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "brLabelKey": {
          "$id": "urn:adp:helm:schemas:v1:backup-and-restore:v1/global/adpBR/brLabelKey",
          "$comment": "Common schema for global Backup and Restore Agent Discovery configuration",
          "type": ["object"],
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "adpBR": {
                  "type": ["object", "null"],
                  "properties": {
                    "brLabelKey": {
                      "description": "Label used to identify Backup and Restore Agents. Only needed for Backup and Restore Agent discovery.",
                      "type": ["string", "null"],
                      "default": "adpbrlabelkey",
                      "examples": ["custombrlabelkey"]
                    }
                  }
                }
              }
            }
          }
        },
        "broGrpcServicePort": {
          "$id": "urn:adp:helm:schemas:v1:backup-and-restore:v1/global/adpBR/broGrpcServicePort",
          "$comment": "Common schema for global Backup and Restore Orchestrator GRPC interface configuration",
          "type": ["object"],
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "adpBR": {
                  "type": ["object", "null"],
                  "properties": {
                    "broGrpcServicePort": {
                      "description": "The port which exposes the Backup and Restore Orchestrator's GRPC interface.",
                      "type": ["integer", "null"],
                      "minimum": 1,
                      "maximum": 65535,
                      "default": 3000,
                      "examples": [3001]
                    }
                  }
                }
              }
            }
          }
        },
        "broServiceName": {
          "$id": "urn:adp:helm:schemas:v1:backup-and-restore:v1/global/adpBR/broServiceName",
          "$comment": "Common schema for global Backup and Restore Orchestrator Service name configuration",
          "type": ["object"],
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "adpBR": {
                  "type": ["object", "null"],
                  "properties": {
                    "broServiceName": {
                      "description": "The release name of the Backup and Restore Orchestrator Service.",
                      "$comment": "This is a string that must be a valid hostname. K8s adds more restrictions, but we don't want to hardcode them here.",
                      "type": ["string", "null"],
                      "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$",
                      "default": "eric-ctrl-bro",
                      "examples": ["custom-bro"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "b35250b6-82da-41d2-9a2a-c4c6564afa94": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:cabootstrap-method:v1",
      "title": "Certificate authority bootstrap method",
      "description": "Global certificate authority bootstrap method parameter",
      "$comment": "global.featureGates.caBootstrap_v2",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "featureGates": {
              "type": ["object", "null"],
              "properties": {
                "caBootstrap_v2": {
                  "description": "Certificate authority bootstrap method, false means bootstrap by SIP-TLS, true means bootstrap by KMS.",
                  "type": ["boolean", "null"],
                  "examples": [true, false]
                }
              }
            }
          }
        }
      }
    },
    "591164f6-d90e-44a5-9ce4-e2d71fc40860": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:container-probes-common:v1",
      "title": "Common ADP container probe configuration",
      "description": "Common definition for container probes and their inter-dependencies",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "basicContainerProbe": {
          "$id": "urn:adp:helm:schemas:v1:container-probes-common:v1/basicContainerProbe",
          "$comment": "Container probe configuration (without success threshold)",
          "type": "object",
          "properties": {
            "initialDelaySeconds": {
              "description": "Initial delay before checking the probe",
              "minimum": 0,
              "examples": [0]
            },
            "failureThreshold": {
              "description": "Maximum number of failed probes before a container is restarted",
              "minimum": 1,
              "examples": [3]
            },
            "periodSeconds": {
              "description": "How often to perform a probe",
              "minimum": 1,
              "examples": [10]
            },
            "timeoutSeconds": {
              "description": "How long to wait for a probe before failing",
              "minimum": 1,
              "examples": [1]
            }
          }
        },
        "fullContainerProbe": {
          "$id": "urn:adp:helm:schemas:v1:container-probes-common:v1/fullContainerProbe",
          "$comment": "Container probe configuration (with success threshold)",
          "allOf": [
            {"$ref": "urn:adp:helm:schemas:v1:container-probes-common:v1/basicContainerProbe"},
            {
              "properties": {
                "successThreshold": {
                  "description": "Minimum number of consecutive successes for a probe to be considered successful after having failed. Must be 1 for liveness and startup probes.",
                  "minimum": 1,
                  "examples": [1]
                }
              }
            }
          ]
        }
      }
    },
    "d1ba519c-bb05-4d44-8282-7a4220d0850f": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:helm-schema-validation-conditions:v1",
      "title": "Helm Schema Validation Conditions",
      "description": "Helm Schema Validation Conditions",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "validation-true": {
          "$id": "urn:adp:helm:schemas:v1:helm-schema-validation-conditions:v1/helmSchemaValidation-true",
          "$comment": "Condition for global.featureGates.helmSchemaValidation set to true",
          "properties": {
            "global": {
              "type": "object",
              "properties": {
                "featureGates": {
                  "type": "object",
                  "properties": {
                    "helmSchemaValidation": {"const": true}
                  },
                  "required": ["helmSchemaValidation"]
                }
              },
              "required": ["featureGates"]
            }
          },
          "required": ["global"]
        },
        "validation-not-false": {
          "$id": "urn:adp:helm:schemas:v1:helm-schema-validation-conditions:v1/helmSchemaValidation-not-false",
          "$comment": "Condition for global.featureGates.helmSchemaValidation not set to false",
          "not": {
            "properties": {
              "global": {
                "type": "object",
                "properties": {
                  "featureGates": {
                    "type": "object",
                    "properties": {
                      "helmSchemaValidation": {"const": false}
                    },
                    "required": ["helmSchemaValidation"]
                  }
                },
                "required": ["featureGates"]
              }
            },
            "required": ["global"]
          }
        },
        "strictValidation-true": {
          "$id": "urn:adp:helm:schemas:v1:helm-schema-validation-conditions:v1/helmSchemaStrictValidation-true",
          "$comment": "Condition for global.featureGates.helmSchemaStrictValidation set to true",
          "properties": {
            "global": {
              "type": "object",
              "properties": {
                "featureGates": {
                  "type": "object",
                  "properties": {
                    "helmSchemaStrictValidation": {"const": true}
                  },
                  "required": ["helmSchemaStrictValidation"]
                }
              },
              "required": ["featureGates"]
            }
          },
          "required": ["global"]
        },
        "strictValidation-not-false": {
          "$id": "urn:adp:helm:schemas:v1:helm-schema-validation-conditions:v1/helmSchemaStrictValidation-not-false",
          "$comment": "Condition for global.featureGates.helmSchemaStrictValidation not set to false",
          "not": {
            "properties": {
              "global": {
                "type": "object",
                "properties": {
                  "featureGates": {
                    "type": "object",
                    "properties": {
                      "helmSchemaStrictValidation": {"const": false}
                    },
                    "required": ["helmSchemaStrictValidation"]
                  }
                },
                "required": ["featureGates"]
              }
            },
            "required": ["global"]
          }
        }
      }
    },
    "827e6dab-6ad9-4637-b2bd-c4ccce5e93d3": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:hook-launcher:v1",
      "title": "Hook Launcher",
      "description": "Global hook launcher parameters",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "globalHooklauncherExecutor": {
          "$id": "urn:adp:helm:schemas:v1:hook-launcher:v1/global/hooklauncher/executor",
          "$comment": "Common schema for global Hook Launcher Executor",
          "type": ["object", "null"],
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "hooklauncher": {
                  "type": ["object", "null"],
                  "properties": {
                    "executor": {
                      "description": "If set to service, hooks for handling upgrades and rollbacks will be executed by this chart. If set to integration, all hooks for handling upgrades and rollbacks will be executed by Hooklauncher(s) in the defined integration chart(s) (see executorCharts).",
                      "enum": ["service", "integration", null],
                      "default": "service",
                      "examples": ["service", "integration"]
                    }
                  }
                }
              }
            }
          }
        },
        "globalHooklauncherExecutorCharts": {
          "$id": "urn:adp:helm:schemas:v1:hook-launcher:v1/global/hooklauncher/executorCharts",
          "$comment": "Common schema for global Hook Launcher Executor charts",
          "type": ["object", "null"],
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "hooklauncher": {
                  "type": ["object", "null"],
                  "properties": {
                    "executorCharts": {
                      "description": "If global.hooklauncher.executor is set to integration, the integration chart names can be set in this parameter as an array that should run the Hooklauncher jobs rendering their subchart trees and taking care of all subchart hook execution.",
                      "type": ["array", "null"],
                      "items": {"type": "string"},
                      "examples": [
                        ["chartOne", "chartTwo"]
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "hooklauncher": {
          "$id": "urn:adp:helm:schemas:v1:hook-launcher:v1/hooklauncher",
          "$comment": "Common schema for Hook Launcher parameters",
          "type": ["object", "null"],
          "properties": {
            "hooklauncher": {
              "type": ["object", "null"],
              "properties": {
                "backoffLimit": {
                  "description": "Set backoffLimit for the hooklauncher jobs",
                  "$comment": "k8sCheckedValue: hooklauncher.backoffLimit",
                  "examples": [6]
                },
                "cleanup": {
                  "description": "Tell hooklauncher to delete jobs and its pods after execution",
                  "oneOf": [
                    {
                      "type": ["boolean", "null"]
                    },
                    {
                      "enum": ["true", "false", "onSuccess"]
                    }
                  ],
                  "examples": [true, "onSuccess"]
                },
                "terminateEarlyOnFailure": {
                  "description": "Tell hooklauncher to exit immediately on a failure from a dispatched job",
                  "type": ["boolean", "string", "null"],
                  "examples": [true, false]
                }
              }
            }
          }
        }
      }
    },
    "5f5118fc-9bbf-482e-af9f-d7dbda2a0d1a": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:labels-and-annotations-common:v1",
      "type": "object",
      "title": "Common ADP label and annotation",
      "description": "Common definition for labels and annotations",
      "$defs": {
        "labels": {
          "$id": "urn:adp:helm:schemas:v1:labels-and-annotations-common:v1/labels",
          "description": "K8s labels added to all managed resources",
          "type": ["null", "object"],
          "additionalProperties": {
            "description": "K8s label added to all managed resources",
            "$comment": "k8sCheckedValue: [*.]labels"
          },
          "examples": [
            {
              "ericsson.com/my-info-key": "my-info-value",
              "ericsson.com/more-key": "more-value"
            }
          ]
        },
        "annotations": {
          "$id": "urn:adp:helm:schemas:v1:labels-and-annotations-common:v1/annotations",
          "description": "K8s annotations added to all managed resources",
          "type": ["null", "object"],
          "additionalProperties": {
            "description": "K8s annotation added to all managed resources",
            "$comment": "k8sCheckedValue: [*.]annotations"
          },
          "examples": [
            {
              "ericsson.com/my-info-key": "my-info-value",
              "ericsson.com/more-key": "more-value"
            }
          ]
        }
      }
    },
    "208e9472-c6ef-4c34-ac7a-63ea304b6320": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:license-management:v1",
      "title": "License Management",
      "description": "Global license management parameters",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "licenseDomains": {
          "$id": "urn:adp:helm:schemas:v1:license-management:v1/global/ericsson/licensing/licenseDomains",
          "$comment": "Common schema for global License Domains",
          "type": ["object"],
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "ericsson": {
                  "type": ["object", "null"],
                  "properties": {
                    "licensing": {
                      "type": ["object", "null"],
                      "properties": {
                        "licenseDomains": {
                          "description": "A list of License Domains used by the Network Function",
                          "type": ["array"],
                          "minItems": 1,
                          "uniqueItems": true,
                          "items": {
                            "type": ["object"],
                            "properties": {
                              "productType": {
                                "description": "A productType according to the ELIM specification, 198 18-1/FCK 111 034 Uen",
                                "type": "string",
                                "pattern": "^[A-Za-z0-9_ -]{2,52}$"
                              },
                              "swltId": {
                                "description": "A swltId according to the ELIM specification, 198 18-1/FCK 111 034 Uen",
                                "type": "string",
                                "pattern": "^[A-Za-z0-9/_ -]{5,255}$"
                              },
                              "customerId": {
                                "description": "A customerId according to the ELIM specification, 198 18-1/FCK 111 034 Uen",
                                "type": "string",
                                "pattern": "^[A-Za-z0-9_-]{1,18}$"
                              }
                            },
                            "required": ["productType", "swltId", "customerId"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "0ad28748-8ded-4e9e-bd0f-5cbc14539a91": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:logging:v1",
      "title": "Logging",
      "deprecated": true,
      "description": "Global logging parameters",
      "$comment": "Use the relevant schema fragment(s) below rather than the main schema",
      "allOf": [false],
      "$defs": {
        "outputs": {
          "$id": "urn:adp:helm:schemas:v1:logging:v1/global/log/outputs",
          "$comment": "Common schema for global log redirection",
          "deprecated": true,
          "type": ["object"],
          "properties": {
            "global": {
              "type": ["object", "null"],
              "properties": {
                "log": {
                  "type": ["object", "null"],
                  "properties": {
                    "outputs": {
                      "description": "Sets the log outputs. Supported values are either one/both of ['k8sLevel', 'applicationLevel'] or one/both of ['stdout', 'stream']. k8sLevel or stdout is the normal k8s behavior, while applicationLevel or stream initializes a Log Shipper sidecar with direct log streaming to Log Transformer service.",
                      "$comment": "Most services document that they support either 'k8sLevel'/'applicationLevel' or 'stdout'/'stream'. This schema cannot guarantee that setting this parameter will work at all.",
                      "type": ["array", "null"],
                      "items": {
                        "enum": [
                          "k8sLevel",
                          "applicationLevel",
                          "stdout",
                          "stream"
                        ]
                      },
                      "examples": [
                        ["k8sLevel"],
                        ["stdout", "stream"]
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "163bd864-66ef-41ea-9ea9-2572e374738d": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:security-sasl:v1",
      "title": "Security SASL enabled parameter",
      "description": "Parameter to enable or disable Global Security SASL",
      "$comment": "global.security.sasl.enabled",
      "properties": {
        "global": {
          "type": ["object", "null"],
          "properties": {
            "security": {
              "type": ["object", "null"],
              "properties": {
                "sasl": {
                  "type": ["object", "null"],
                  "properties": {
                    "enabled": {
                      "description": "Enable/Disable SASL in the service.",
                      "type": ["boolean", "null"],
                      "examples": [true, false]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "3faca165-58ae-4584-bdfc-8ff3894e2ee9": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "urn:adp:helm:schemas:v1:service-networking-common:v1",
      "type": "object",
      "title": "Common ADP service manifest networking configuration",
      "description": "Common definition for service networking parameters in ADP",
      "$defs": {
        "loadBalancerIP": {
          "$id": "urn:adp:helm:schemas:v1:service-networking-common:v1/loadBalancerIP",
          "description": "VIP Address to be used for the service if set to type LoadBalancer",
          "type": ["string", "null"],
          "$comment": "k8sCheckedValue: [*.]loadBalancerIP",
          "examples": ["10.0.0.2", ""]
        },
        "sharedVIPLabel": {
          "$id": "urn:adp:helm:schemas:v1:service-networking-common:v1/sharedVIPLabel",
          "description": "The value used with the annotation key to indicate the VIP address is being shared among ADP services that are using the same label",
          "type": ["string", "null"],
          "examples": ["oam"]
        },
        "addressPoolName": {
          "$id": "urn:adp:helm:schemas:v1:service-networking-common:v1/addressPoolName",
          "description": "The name of the ECM FE address pool from which to retrieve a VIP address",
          "type": ["string", "null"],
          "examples": ["addressPool1"]
        }
      }
    }
  }
}
