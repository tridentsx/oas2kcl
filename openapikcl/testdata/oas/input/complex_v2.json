{
  "swagger": "2.0",
  "info": {
    "title": "Complex API",
    "version": "1.0.0",
    "description": "A complex API for testing advanced features"
  },
  "host": "api.example.com",
  "basePath": "/v1",
  "schemes": ["https"],
  "paths": {
    "/products": {
      "get": {
        "summary": "List products",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/orders": {
      "post": {
        "summary": "Create an order",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "order",
            "description": "Order to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BaseObject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp"
        }
      }
    },
    "Product": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseObject"
        },
        {
          "type": "object",
          "required": ["name", "price", "category"],
          "properties": {
            "name": {
              "type": "string",
              "description": "Product name"
            },
            "description": {
              "type": "string",
              "description": "Product description"
            },
            "price": {
              "type": "number",
              "format": "float",
              "minimum": 0,
              "description": "Product price"
            },
            "category": {
              "$ref": "#/definitions/Category"
            }
          }
        }
      ]
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "status": {
          "type": "string",
          "enum": ["pending", "processing", "shipped", "delivered", "cancelled"]
        },
        "totalAmount": {
          "type": "number",
          "format": "float"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["customer", "items"]
    },
    "OrderItem": {
      "type": "object",
      "properties": {
        "product": {
          "$ref": "#/definitions/Product"
        },
        "quantity": {
          "type": "integer",
          "minimum": 1
        },
        "unitPrice": {
          "type": "number",
          "format": "float"
        }
      },
      "required": ["product", "quantity", "unitPrice"]
    },
    "Customer": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseObject"
        },
        {
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            },
            "phone": {
              "type": "string"
            },
            "address": {
              "$ref": "#/definitions/Address"
            }
          },
          "required": ["firstName", "lastName", "email"]
        }
      ]
    },
    "Address": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      },
      "required": ["street", "city", "country"]
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Mixed": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": ["type"]
    },
    "Multi": {
      "type": "object",
      "properties": {
        "anyOf": {
          "type": "string",
          "description": "This is just a placeholder since OpenAPI 2.0 doesn't support oneOf/anyOf"
        }
      }
    }
  }
}
